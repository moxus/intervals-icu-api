/* tslint:disable */
/* eslint-disable */
/**
 * Intervals.icu API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Folder } from './Folder';
import {
    FolderFromJSON,
    FolderFromJSONTyped,
    FolderToJSON,
} from './Folder';

/**
 * 
 * @export
 * @interface AthleteTrainingPlan
 */
export interface AthleteTrainingPlan {
    /**
     * 
     * @type {string}
     * @memberof AthleteTrainingPlan
     */
    athleteId?: string;
    /**
     * 
     * @type {number}
     * @memberof AthleteTrainingPlan
     */
    trainingPlanId?: number;
    /**
     * 
     * @type {string}
     * @memberof AthleteTrainingPlan
     */
    trainingPlanStartDate?: string;
    /**
     * 
     * @type {string}
     * @memberof AthleteTrainingPlan
     */
    timezone?: string;
    /**
     * 
     * @type {Date}
     * @memberof AthleteTrainingPlan
     */
    trainingPlanLastApplied?: Date;
    /**
     * 
     * @type {Folder}
     * @memberof AthleteTrainingPlan
     */
    trainingPlan?: Folder;
    /**
     * 
     * @type {string}
     * @memberof AthleteTrainingPlan
     */
    trainingPlanAlias?: string;
}

/**
 * Check if a given object implements the AthleteTrainingPlan interface.
 */
export function instanceOfAthleteTrainingPlan(value: object): value is AthleteTrainingPlan {
    return true;
}

export function AthleteTrainingPlanFromJSON(json: any): AthleteTrainingPlan {
    return AthleteTrainingPlanFromJSONTyped(json, false);
}

export function AthleteTrainingPlanFromJSONTyped(json: any, ignoreDiscriminator: boolean): AthleteTrainingPlan {
    if (json == null) {
        return json;
    }
    return {
        
        'athleteId': json['athlete_id'] == null ? undefined : json['athlete_id'],
        'trainingPlanId': json['training_plan_id'] == null ? undefined : json['training_plan_id'],
        'trainingPlanStartDate': json['training_plan_start_date'] == null ? undefined : json['training_plan_start_date'],
        'timezone': json['timezone'] == null ? undefined : json['timezone'],
        'trainingPlanLastApplied': json['training_plan_last_applied'] == null ? undefined : (new Date(json['training_plan_last_applied'])),
        'trainingPlan': json['training_plan'] == null ? undefined : FolderFromJSON(json['training_plan']),
        'trainingPlanAlias': json['training_plan_alias'] == null ? undefined : json['training_plan_alias'],
    };
}

export function AthleteTrainingPlanToJSON(value?: AthleteTrainingPlan | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'athlete_id': value['athleteId'],
        'training_plan_id': value['trainingPlanId'],
        'training_plan_start_date': value['trainingPlanStartDate'],
        'timezone': value['timezone'],
        'training_plan_last_applied': value['trainingPlanLastApplied'] == null ? undefined : ((value['trainingPlanLastApplied']).toISOString()),
        'training_plan': FolderToJSON(value['trainingPlan']),
        'training_plan_alias': value['trainingPlanAlias'],
    };
}

