/* tslint:disable */
/* eslint-disable */
/**
 * Intervals.icu API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ZoneTime } from './ZoneTime';
import {
    ZoneTimeFromJSON,
    ZoneTimeFromJSONTyped,
    ZoneTimeToJSON,
} from './ZoneTime';
import type { Ignore } from './Ignore';
import {
    IgnoreFromJSON,
    IgnoreFromJSONTyped,
    IgnoreToJSON,
} from './Ignore';
import type { StravaGear } from './StravaGear';
import {
    StravaGearFromJSON,
    StravaGearFromJSONTyped,
    StravaGearToJSON,
} from './StravaGear';
import type { HRRecovery } from './HRRecovery';
import {
    HRRecoveryFromJSON,
    HRRecoveryFromJSONTyped,
    HRRecoveryToJSON,
} from './HRRecovery';
import type { Attachment } from './Attachment';
import {
    AttachmentFromJSON,
    AttachmentFromJSONTyped,
    AttachmentToJSON,
} from './Attachment';
import type { IcuAchievement } from './IcuAchievement';
import {
    IcuAchievementFromJSON,
    IcuAchievementFromJSONTyped,
    IcuAchievementToJSON,
} from './IcuAchievement';

/**
 * 
 * @export
 * @interface Activity
 */
export interface Activity {
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    startDateLocal?: string;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    type?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Activity
     */
    icuIgnoreTime?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuPmCp?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuPmWPrime?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuPmPMax?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuPmFtp?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuPmFtpSecs?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuPmFtpWatts?: number;
    /**
     * 
     * @type {boolean}
     * @memberof Activity
     */
    icuIgnorePower?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuRollingCp?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuRollingWPrime?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuRollingPMax?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuRollingFtp?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuRollingFtpDelta?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuTrainingLoad?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuAtl?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuCtl?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    pairedEventId?: number;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    startDate?: string;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    distance?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuDistance?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    movingTime?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    elapsedTime?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    coastingTime?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    totalElevationGain?: number;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    timezone?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Activity
     */
    trainer?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Activity
     */
    commute?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    maxSpeed?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    averageSpeed?: number;
    /**
     * 
     * @type {boolean}
     * @memberof Activity
     */
    deviceWatts?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Activity
     */
    hasHeartrate?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    maxHeartrate?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    averageHeartrate?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    averageCadence?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    calories?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    averageTemp?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    minTemp?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    maxTemp?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    avgLrBalance?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    gap?: number;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    gapModel?: ActivityGapModelEnum;
    /**
     * 
     * @type {boolean}
     * @memberof Activity
     */
    useElevationCorrection?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Activity
     */
    race?: boolean;
    /**
     * 
     * @type {StravaGear}
     * @memberof Activity
     */
    gear?: StravaGear;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    perceivedExertion?: number;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    deviceName?: string;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    powerMeter?: string;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    powerMeterSerial?: string;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    powerMeterBattery?: string;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    crankLength?: number;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    externalId?: string;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    fileSportIndex?: number;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    fileType?: string;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    icuAthleteId?: string;
    /**
     * 
     * @type {Date}
     * @memberof Activity
     */
    created?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Activity
     */
    icuSyncDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Activity
     */
    analyzed?: Date;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuFtp?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuWPrime?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    thresholdPace?: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof Activity
     */
    icuHrZones?: Array<number>;
    /**
     * 
     * @type {Array<number>}
     * @memberof Activity
     */
    paceZones?: Array<number>;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    lthr?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuRestingHr?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuWeight?: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof Activity
     */
    icuPowerZones?: Array<number>;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuSweetSpotMin?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuSweetSpotMax?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuPowerSpikeThreshold?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    trimp?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuWarmupTime?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuCooldownTime?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuChatId?: number;
    /**
     * 
     * @type {boolean}
     * @memberof Activity
     */
    icuIgnoreHr?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Activity
     */
    ignoreVelocity?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Activity
     */
    ignorePace?: boolean;
    /**
     * 
     * @type {Array<Ignore>}
     * @memberof Activity
     */
    ignoreParts?: Array<Ignore>;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuWeightedAvgWatts?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuTrainingLoadData?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof Activity
     */
    intervalSummary?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Activity
     */
    skylineChartBytes?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Activity
     */
    streamTypes?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof Activity
     */
    hasSegments?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof Activity
     */
    powerFieldNames?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    powerField?: string;
    /**
     * 
     * @type {Array<ZoneTime>}
     * @memberof Activity
     */
    icuZoneTimes?: Array<ZoneTime>;
    /**
     * 
     * @type {Array<number>}
     * @memberof Activity
     */
    icuHrZoneTimes?: Array<number>;
    /**
     * 
     * @type {Array<number>}
     * @memberof Activity
     */
    paceZoneTimes?: Array<number>;
    /**
     * 
     * @type {Array<number>}
     * @memberof Activity
     */
    gapZoneTimes?: Array<number>;
    /**
     * 
     * @type {boolean}
     * @memberof Activity
     */
    useGapZoneTimes?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    tizOrder?: ActivityTizOrderEnum;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    polarizationIndex?: number;
    /**
     * 
     * @type {Array<IcuAchievement>}
     * @memberof Activity
     */
    icuAchievements?: Array<IcuAchievement>;
    /**
     * 
     * @type {boolean}
     * @memberof Activity
     */
    icuIntervalsEdited?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Activity
     */
    lockIntervals?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuLapCount?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuJoules?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuJoulesAboveFtp?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuMaxWbalDepletion?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuRecordingTime?: number;
    /**
     * 
     * @type {HRRecovery}
     * @memberof Activity
     */
    icuHrr?: HRRecovery;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    icuSyncError?: string;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    icuColor?: string;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuPowerHrZ2?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuPowerHrZ2Mins?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuCadenceZ2?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuRpe?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    feel?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    kgLifted?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    decoupling?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuMedianTimeDelta?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    p30sExponent?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    workoutShiftSecs?: number;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    stravaId?: string;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    lengths?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    poolLength?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    compliance?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    coachTick?: number;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    source?: ActivitySourceEnum;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    oauthClientId?: number;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    oauthClientName?: string;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    averageAltitude?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    minAltitude?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    maxAltitude?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    powerLoad?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    hrLoad?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    paceLoad?: number;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    hrLoadType?: ActivityHrLoadTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    paceLoadType?: ActivityPaceLoadTypeEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof Activity
     */
    tags?: Array<string>;
    /**
     * 
     * @type {Array<Attachment>}
     * @memberof Activity
     */
    attachments?: Array<Attachment>;
    /**
     * 
     * @type {Array<number>}
     * @memberof Activity
     */
    recordingStops?: Array<number>;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    pace?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    athleteMaxHr?: number;
    /**
     * 
     * @type {string}
     * @memberof Activity
     */
    group?: string;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuAverageWatts?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuIntensity?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuVariabilityIndex?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuEfficiencyFactor?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    icuPowerHr?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    sessionRpe?: number;
    /**
     * 
     * @type {number}
     * @memberof Activity
     */
    averageStride?: number;
}


/**
 * @export
 */
export const ActivityGapModelEnum = {
    None: 'NONE',
    StravaRun: 'STRAVA_RUN'
} as const;
export type ActivityGapModelEnum = typeof ActivityGapModelEnum[keyof typeof ActivityGapModelEnum];

/**
 * @export
 */
export const ActivityTizOrderEnum = {
    PowerHrPace: 'POWER_HR_PACE',
    PowerPaceHr: 'POWER_PACE_HR',
    HrPowerPace: 'HR_POWER_PACE',
    HrPacePower: 'HR_PACE_POWER',
    PacePowerHr: 'PACE_POWER_HR',
    PaceHrPower: 'PACE_HR_POWER'
} as const;
export type ActivityTizOrderEnum = typeof ActivityTizOrderEnum[keyof typeof ActivityTizOrderEnum];

/**
 * @export
 */
export const ActivitySourceEnum = {
    Strava: 'STRAVA',
    Upload: 'UPLOAD',
    Manual: 'MANUAL',
    GarminConnect: 'GARMIN_CONNECT',
    OauthClient: 'OAUTH_CLIENT',
    Dropbox: 'DROPBOX',
    Polar: 'POLAR',
    Suunto: 'SUUNTO',
    Coros: 'COROS',
    Wahoo: 'WAHOO'
} as const;
export type ActivitySourceEnum = typeof ActivitySourceEnum[keyof typeof ActivitySourceEnum];

/**
 * @export
 */
export const ActivityHrLoadTypeEnum = {
    AvgHr: 'AVG_HR',
    HrZones: 'HR_ZONES',
    Hrss: 'HRSS'
} as const;
export type ActivityHrLoadTypeEnum = typeof ActivityHrLoadTypeEnum[keyof typeof ActivityHrLoadTypeEnum];

/**
 * @export
 */
export const ActivityPaceLoadTypeEnum = {
    Swim: 'SWIM',
    Run: 'RUN'
} as const;
export type ActivityPaceLoadTypeEnum = typeof ActivityPaceLoadTypeEnum[keyof typeof ActivityPaceLoadTypeEnum];


/**
 * Check if a given object implements the Activity interface.
 */
export function instanceOfActivity(value: object): value is Activity {
    return true;
}

export function ActivityFromJSON(json: any): Activity {
    return ActivityFromJSONTyped(json, false);
}

export function ActivityFromJSONTyped(json: any, ignoreDiscriminator: boolean): Activity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'startDateLocal': json['start_date_local'] == null ? undefined : json['start_date_local'],
        'type': json['type'] == null ? undefined : json['type'],
        'icuIgnoreTime': json['icu_ignore_time'] == null ? undefined : json['icu_ignore_time'],
        'icuPmCp': json['icu_pm_cp'] == null ? undefined : json['icu_pm_cp'],
        'icuPmWPrime': json['icu_pm_w_prime'] == null ? undefined : json['icu_pm_w_prime'],
        'icuPmPMax': json['icu_pm_p_max'] == null ? undefined : json['icu_pm_p_max'],
        'icuPmFtp': json['icu_pm_ftp'] == null ? undefined : json['icu_pm_ftp'],
        'icuPmFtpSecs': json['icu_pm_ftp_secs'] == null ? undefined : json['icu_pm_ftp_secs'],
        'icuPmFtpWatts': json['icu_pm_ftp_watts'] == null ? undefined : json['icu_pm_ftp_watts'],
        'icuIgnorePower': json['icu_ignore_power'] == null ? undefined : json['icu_ignore_power'],
        'icuRollingCp': json['icu_rolling_cp'] == null ? undefined : json['icu_rolling_cp'],
        'icuRollingWPrime': json['icu_rolling_w_prime'] == null ? undefined : json['icu_rolling_w_prime'],
        'icuRollingPMax': json['icu_rolling_p_max'] == null ? undefined : json['icu_rolling_p_max'],
        'icuRollingFtp': json['icu_rolling_ftp'] == null ? undefined : json['icu_rolling_ftp'],
        'icuRollingFtpDelta': json['icu_rolling_ftp_delta'] == null ? undefined : json['icu_rolling_ftp_delta'],
        'icuTrainingLoad': json['icu_training_load'] == null ? undefined : json['icu_training_load'],
        'icuAtl': json['icu_atl'] == null ? undefined : json['icu_atl'],
        'icuCtl': json['icu_ctl'] == null ? undefined : json['icu_ctl'],
        'pairedEventId': json['paired_event_id'] == null ? undefined : json['paired_event_id'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'startDate': json['start_date'] == null ? undefined : json['start_date'],
        'distance': json['distance'] == null ? undefined : json['distance'],
        'icuDistance': json['icu_distance'] == null ? undefined : json['icu_distance'],
        'movingTime': json['moving_time'] == null ? undefined : json['moving_time'],
        'elapsedTime': json['elapsed_time'] == null ? undefined : json['elapsed_time'],
        'coastingTime': json['coasting_time'] == null ? undefined : json['coasting_time'],
        'totalElevationGain': json['total_elevation_gain'] == null ? undefined : json['total_elevation_gain'],
        'timezone': json['timezone'] == null ? undefined : json['timezone'],
        'trainer': json['trainer'] == null ? undefined : json['trainer'],
        'commute': json['commute'] == null ? undefined : json['commute'],
        'maxSpeed': json['max_speed'] == null ? undefined : json['max_speed'],
        'averageSpeed': json['average_speed'] == null ? undefined : json['average_speed'],
        'deviceWatts': json['device_watts'] == null ? undefined : json['device_watts'],
        'hasHeartrate': json['has_heartrate'] == null ? undefined : json['has_heartrate'],
        'maxHeartrate': json['max_heartrate'] == null ? undefined : json['max_heartrate'],
        'averageHeartrate': json['average_heartrate'] == null ? undefined : json['average_heartrate'],
        'averageCadence': json['average_cadence'] == null ? undefined : json['average_cadence'],
        'calories': json['calories'] == null ? undefined : json['calories'],
        'averageTemp': json['average_temp'] == null ? undefined : json['average_temp'],
        'minTemp': json['min_temp'] == null ? undefined : json['min_temp'],
        'maxTemp': json['max_temp'] == null ? undefined : json['max_temp'],
        'avgLrBalance': json['avg_lr_balance'] == null ? undefined : json['avg_lr_balance'],
        'gap': json['gap'] == null ? undefined : json['gap'],
        'gapModel': json['gap_model'] == null ? undefined : json['gap_model'],
        'useElevationCorrection': json['use_elevation_correction'] == null ? undefined : json['use_elevation_correction'],
        'race': json['race'] == null ? undefined : json['race'],
        'gear': json['gear'] == null ? undefined : StravaGearFromJSON(json['gear']),
        'perceivedExertion': json['perceived_exertion'] == null ? undefined : json['perceived_exertion'],
        'deviceName': json['device_name'] == null ? undefined : json['device_name'],
        'powerMeter': json['power_meter'] == null ? undefined : json['power_meter'],
        'powerMeterSerial': json['power_meter_serial'] == null ? undefined : json['power_meter_serial'],
        'powerMeterBattery': json['power_meter_battery'] == null ? undefined : json['power_meter_battery'],
        'crankLength': json['crank_length'] == null ? undefined : json['crank_length'],
        'externalId': json['external_id'] == null ? undefined : json['external_id'],
        'fileSportIndex': json['file_sport_index'] == null ? undefined : json['file_sport_index'],
        'fileType': json['file_type'] == null ? undefined : json['file_type'],
        'icuAthleteId': json['icu_athlete_id'] == null ? undefined : json['icu_athlete_id'],
        'created': json['created'] == null ? undefined : (new Date(json['created'])),
        'icuSyncDate': json['icu_sync_date'] == null ? undefined : (new Date(json['icu_sync_date'])),
        'analyzed': json['analyzed'] == null ? undefined : (new Date(json['analyzed'])),
        'icuFtp': json['icu_ftp'] == null ? undefined : json['icu_ftp'],
        'icuWPrime': json['icu_w_prime'] == null ? undefined : json['icu_w_prime'],
        'thresholdPace': json['threshold_pace'] == null ? undefined : json['threshold_pace'],
        'icuHrZones': json['icu_hr_zones'] == null ? undefined : json['icu_hr_zones'],
        'paceZones': json['pace_zones'] == null ? undefined : json['pace_zones'],
        'lthr': json['lthr'] == null ? undefined : json['lthr'],
        'icuRestingHr': json['icu_resting_hr'] == null ? undefined : json['icu_resting_hr'],
        'icuWeight': json['icu_weight'] == null ? undefined : json['icu_weight'],
        'icuPowerZones': json['icu_power_zones'] == null ? undefined : json['icu_power_zones'],
        'icuSweetSpotMin': json['icu_sweet_spot_min'] == null ? undefined : json['icu_sweet_spot_min'],
        'icuSweetSpotMax': json['icu_sweet_spot_max'] == null ? undefined : json['icu_sweet_spot_max'],
        'icuPowerSpikeThreshold': json['icu_power_spike_threshold'] == null ? undefined : json['icu_power_spike_threshold'],
        'trimp': json['trimp'] == null ? undefined : json['trimp'],
        'icuWarmupTime': json['icu_warmup_time'] == null ? undefined : json['icu_warmup_time'],
        'icuCooldownTime': json['icu_cooldown_time'] == null ? undefined : json['icu_cooldown_time'],
        'icuChatId': json['icu_chat_id'] == null ? undefined : json['icu_chat_id'],
        'icuIgnoreHr': json['icu_ignore_hr'] == null ? undefined : json['icu_ignore_hr'],
        'ignoreVelocity': json['ignore_velocity'] == null ? undefined : json['ignore_velocity'],
        'ignorePace': json['ignore_pace'] == null ? undefined : json['ignore_pace'],
        'ignoreParts': json['ignore_parts'] == null ? undefined : ((json['ignore_parts'] as Array<any>).map(IgnoreFromJSON)),
        'icuWeightedAvgWatts': json['icu_weighted_avg_watts'] == null ? undefined : json['icu_weighted_avg_watts'],
        'icuTrainingLoadData': json['icu_training_load_data'] == null ? undefined : json['icu_training_load_data'],
        'intervalSummary': json['interval_summary'] == null ? undefined : json['interval_summary'],
        'skylineChartBytes': json['skyline_chart_bytes'] == null ? undefined : json['skyline_chart_bytes'],
        'streamTypes': json['stream_types'] == null ? undefined : json['stream_types'],
        'hasSegments': json['has_segments'] == null ? undefined : json['has_segments'],
        'powerFieldNames': json['power_field_names'] == null ? undefined : json['power_field_names'],
        'powerField': json['power_field'] == null ? undefined : json['power_field'],
        'icuZoneTimes': json['icu_zone_times'] == null ? undefined : ((json['icu_zone_times'] as Array<any>).map(ZoneTimeFromJSON)),
        'icuHrZoneTimes': json['icu_hr_zone_times'] == null ? undefined : json['icu_hr_zone_times'],
        'paceZoneTimes': json['pace_zone_times'] == null ? undefined : json['pace_zone_times'],
        'gapZoneTimes': json['gap_zone_times'] == null ? undefined : json['gap_zone_times'],
        'useGapZoneTimes': json['use_gap_zone_times'] == null ? undefined : json['use_gap_zone_times'],
        'tizOrder': json['tiz_order'] == null ? undefined : json['tiz_order'],
        'polarizationIndex': json['polarization_index'] == null ? undefined : json['polarization_index'],
        'icuAchievements': json['icu_achievements'] == null ? undefined : ((json['icu_achievements'] as Array<any>).map(IcuAchievementFromJSON)),
        'icuIntervalsEdited': json['icu_intervals_edited'] == null ? undefined : json['icu_intervals_edited'],
        'lockIntervals': json['lock_intervals'] == null ? undefined : json['lock_intervals'],
        'icuLapCount': json['icu_lap_count'] == null ? undefined : json['icu_lap_count'],
        'icuJoules': json['icu_joules'] == null ? undefined : json['icu_joules'],
        'icuJoulesAboveFtp': json['icu_joules_above_ftp'] == null ? undefined : json['icu_joules_above_ftp'],
        'icuMaxWbalDepletion': json['icu_max_wbal_depletion'] == null ? undefined : json['icu_max_wbal_depletion'],
        'icuRecordingTime': json['icu_recording_time'] == null ? undefined : json['icu_recording_time'],
        'icuHrr': json['icu_hrr'] == null ? undefined : HRRecoveryFromJSON(json['icu_hrr']),
        'icuSyncError': json['icu_sync_error'] == null ? undefined : json['icu_sync_error'],
        'icuColor': json['icu_color'] == null ? undefined : json['icu_color'],
        'icuPowerHrZ2': json['icu_power_hr_z2'] == null ? undefined : json['icu_power_hr_z2'],
        'icuPowerHrZ2Mins': json['icu_power_hr_z2_mins'] == null ? undefined : json['icu_power_hr_z2_mins'],
        'icuCadenceZ2': json['icu_cadence_z2'] == null ? undefined : json['icu_cadence_z2'],
        'icuRpe': json['icu_rpe'] == null ? undefined : json['icu_rpe'],
        'feel': json['feel'] == null ? undefined : json['feel'],
        'kgLifted': json['kg_lifted'] == null ? undefined : json['kg_lifted'],
        'decoupling': json['decoupling'] == null ? undefined : json['decoupling'],
        'icuMedianTimeDelta': json['icu_median_time_delta'] == null ? undefined : json['icu_median_time_delta'],
        'p30sExponent': json['p30s_exponent'] == null ? undefined : json['p30s_exponent'],
        'workoutShiftSecs': json['workout_shift_secs'] == null ? undefined : json['workout_shift_secs'],
        'stravaId': json['strava_id'] == null ? undefined : json['strava_id'],
        'lengths': json['lengths'] == null ? undefined : json['lengths'],
        'poolLength': json['pool_length'] == null ? undefined : json['pool_length'],
        'compliance': json['compliance'] == null ? undefined : json['compliance'],
        'coachTick': json['coach_tick'] == null ? undefined : json['coach_tick'],
        'source': json['source'] == null ? undefined : json['source'],
        'oauthClientId': json['oauth_client_id'] == null ? undefined : json['oauth_client_id'],
        'oauthClientName': json['oauth_client_name'] == null ? undefined : json['oauth_client_name'],
        'averageAltitude': json['average_altitude'] == null ? undefined : json['average_altitude'],
        'minAltitude': json['min_altitude'] == null ? undefined : json['min_altitude'],
        'maxAltitude': json['max_altitude'] == null ? undefined : json['max_altitude'],
        'powerLoad': json['power_load'] == null ? undefined : json['power_load'],
        'hrLoad': json['hr_load'] == null ? undefined : json['hr_load'],
        'paceLoad': json['pace_load'] == null ? undefined : json['pace_load'],
        'hrLoadType': json['hr_load_type'] == null ? undefined : json['hr_load_type'],
        'paceLoadType': json['pace_load_type'] == null ? undefined : json['pace_load_type'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'attachments': json['attachments'] == null ? undefined : ((json['attachments'] as Array<any>).map(AttachmentFromJSON)),
        'recordingStops': json['recording_stops'] == null ? undefined : json['recording_stops'],
        'pace': json['pace'] == null ? undefined : json['pace'],
        'athleteMaxHr': json['athlete_max_hr'] == null ? undefined : json['athlete_max_hr'],
        'group': json['group'] == null ? undefined : json['group'],
        'icuAverageWatts': json['icu_average_watts'] == null ? undefined : json['icu_average_watts'],
        'icuIntensity': json['icu_intensity'] == null ? undefined : json['icu_intensity'],
        'icuVariabilityIndex': json['icu_variability_index'] == null ? undefined : json['icu_variability_index'],
        'icuEfficiencyFactor': json['icu_efficiency_factor'] == null ? undefined : json['icu_efficiency_factor'],
        'icuPowerHr': json['icu_power_hr'] == null ? undefined : json['icu_power_hr'],
        'sessionRpe': json['session_rpe'] == null ? undefined : json['session_rpe'],
        'averageStride': json['average_stride'] == null ? undefined : json['average_stride'],
    };
}

export function ActivityToJSON(value?: Activity | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'start_date_local': value['startDateLocal'],
        'type': value['type'],
        'icu_ignore_time': value['icuIgnoreTime'],
        'icu_pm_cp': value['icuPmCp'],
        'icu_pm_w_prime': value['icuPmWPrime'],
        'icu_pm_p_max': value['icuPmPMax'],
        'icu_pm_ftp': value['icuPmFtp'],
        'icu_pm_ftp_secs': value['icuPmFtpSecs'],
        'icu_pm_ftp_watts': value['icuPmFtpWatts'],
        'icu_ignore_power': value['icuIgnorePower'],
        'icu_rolling_cp': value['icuRollingCp'],
        'icu_rolling_w_prime': value['icuRollingWPrime'],
        'icu_rolling_p_max': value['icuRollingPMax'],
        'icu_rolling_ftp': value['icuRollingFtp'],
        'icu_rolling_ftp_delta': value['icuRollingFtpDelta'],
        'icu_training_load': value['icuTrainingLoad'],
        'icu_atl': value['icuAtl'],
        'icu_ctl': value['icuCtl'],
        'paired_event_id': value['pairedEventId'],
        'name': value['name'],
        'description': value['description'],
        'start_date': value['startDate'],
        'distance': value['distance'],
        'icu_distance': value['icuDistance'],
        'moving_time': value['movingTime'],
        'elapsed_time': value['elapsedTime'],
        'coasting_time': value['coastingTime'],
        'total_elevation_gain': value['totalElevationGain'],
        'timezone': value['timezone'],
        'trainer': value['trainer'],
        'commute': value['commute'],
        'max_speed': value['maxSpeed'],
        'average_speed': value['averageSpeed'],
        'device_watts': value['deviceWatts'],
        'has_heartrate': value['hasHeartrate'],
        'max_heartrate': value['maxHeartrate'],
        'average_heartrate': value['averageHeartrate'],
        'average_cadence': value['averageCadence'],
        'calories': value['calories'],
        'average_temp': value['averageTemp'],
        'min_temp': value['minTemp'],
        'max_temp': value['maxTemp'],
        'avg_lr_balance': value['avgLrBalance'],
        'gap': value['gap'],
        'gap_model': value['gapModel'],
        'use_elevation_correction': value['useElevationCorrection'],
        'race': value['race'],
        'gear': StravaGearToJSON(value['gear']),
        'perceived_exertion': value['perceivedExertion'],
        'device_name': value['deviceName'],
        'power_meter': value['powerMeter'],
        'power_meter_serial': value['powerMeterSerial'],
        'power_meter_battery': value['powerMeterBattery'],
        'crank_length': value['crankLength'],
        'external_id': value['externalId'],
        'file_sport_index': value['fileSportIndex'],
        'file_type': value['fileType'],
        'icu_athlete_id': value['icuAthleteId'],
        'created': value['created'] == null ? undefined : ((value['created']).toISOString()),
        'icu_sync_date': value['icuSyncDate'] == null ? undefined : ((value['icuSyncDate']).toISOString()),
        'analyzed': value['analyzed'] == null ? undefined : ((value['analyzed']).toISOString()),
        'icu_ftp': value['icuFtp'],
        'icu_w_prime': value['icuWPrime'],
        'threshold_pace': value['thresholdPace'],
        'icu_hr_zones': value['icuHrZones'],
        'pace_zones': value['paceZones'],
        'lthr': value['lthr'],
        'icu_resting_hr': value['icuRestingHr'],
        'icu_weight': value['icuWeight'],
        'icu_power_zones': value['icuPowerZones'],
        'icu_sweet_spot_min': value['icuSweetSpotMin'],
        'icu_sweet_spot_max': value['icuSweetSpotMax'],
        'icu_power_spike_threshold': value['icuPowerSpikeThreshold'],
        'trimp': value['trimp'],
        'icu_warmup_time': value['icuWarmupTime'],
        'icu_cooldown_time': value['icuCooldownTime'],
        'icu_chat_id': value['icuChatId'],
        'icu_ignore_hr': value['icuIgnoreHr'],
        'ignore_velocity': value['ignoreVelocity'],
        'ignore_pace': value['ignorePace'],
        'ignore_parts': value['ignoreParts'] == null ? undefined : ((value['ignoreParts'] as Array<any>).map(IgnoreToJSON)),
        'icu_weighted_avg_watts': value['icuWeightedAvgWatts'],
        'icu_training_load_data': value['icuTrainingLoadData'],
        'interval_summary': value['intervalSummary'],
        'skyline_chart_bytes': value['skylineChartBytes'],
        'stream_types': value['streamTypes'],
        'has_segments': value['hasSegments'],
        'power_field_names': value['powerFieldNames'],
        'power_field': value['powerField'],
        'icu_zone_times': value['icuZoneTimes'] == null ? undefined : ((value['icuZoneTimes'] as Array<any>).map(ZoneTimeToJSON)),
        'icu_hr_zone_times': value['icuHrZoneTimes'],
        'pace_zone_times': value['paceZoneTimes'],
        'gap_zone_times': value['gapZoneTimes'],
        'use_gap_zone_times': value['useGapZoneTimes'],
        'tiz_order': value['tizOrder'],
        'polarization_index': value['polarizationIndex'],
        'icu_achievements': value['icuAchievements'] == null ? undefined : ((value['icuAchievements'] as Array<any>).map(IcuAchievementToJSON)),
        'icu_intervals_edited': value['icuIntervalsEdited'],
        'lock_intervals': value['lockIntervals'],
        'icu_lap_count': value['icuLapCount'],
        'icu_joules': value['icuJoules'],
        'icu_joules_above_ftp': value['icuJoulesAboveFtp'],
        'icu_max_wbal_depletion': value['icuMaxWbalDepletion'],
        'icu_recording_time': value['icuRecordingTime'],
        'icu_hrr': HRRecoveryToJSON(value['icuHrr']),
        'icu_sync_error': value['icuSyncError'],
        'icu_color': value['icuColor'],
        'icu_power_hr_z2': value['icuPowerHrZ2'],
        'icu_power_hr_z2_mins': value['icuPowerHrZ2Mins'],
        'icu_cadence_z2': value['icuCadenceZ2'],
        'icu_rpe': value['icuRpe'],
        'feel': value['feel'],
        'kg_lifted': value['kgLifted'],
        'decoupling': value['decoupling'],
        'icu_median_time_delta': value['icuMedianTimeDelta'],
        'p30s_exponent': value['p30sExponent'],
        'workout_shift_secs': value['workoutShiftSecs'],
        'strava_id': value['stravaId'],
        'lengths': value['lengths'],
        'pool_length': value['poolLength'],
        'compliance': value['compliance'],
        'coach_tick': value['coachTick'],
        'source': value['source'],
        'oauth_client_id': value['oauthClientId'],
        'oauth_client_name': value['oauthClientName'],
        'average_altitude': value['averageAltitude'],
        'min_altitude': value['minAltitude'],
        'max_altitude': value['maxAltitude'],
        'power_load': value['powerLoad'],
        'hr_load': value['hrLoad'],
        'pace_load': value['paceLoad'],
        'hr_load_type': value['hrLoadType'],
        'pace_load_type': value['paceLoadType'],
        'tags': value['tags'],
        'attachments': value['attachments'] == null ? undefined : ((value['attachments'] as Array<any>).map(AttachmentToJSON)),
        'recording_stops': value['recordingStops'],
        'pace': value['pace'],
        'athlete_max_hr': value['athleteMaxHr'],
        'group': value['group'],
        'icu_average_watts': value['icuAverageWatts'],
        'icu_intensity': value['icuIntensity'],
        'icu_variability_index': value['icuVariabilityIndex'],
        'icu_efficiency_factor': value['icuEfficiencyFactor'],
        'icu_power_hr': value['icuPowerHr'],
        'session_rpe': value['sessionRpe'],
        'average_stride': value['averageStride'],
    };
}

