/* tslint:disable */
/* eslint-disable */
/**
 * Intervals.icu API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CategorySummary } from './CategorySummary';
import {
    CategorySummaryFromJSON,
    CategorySummaryFromJSONTyped,
    CategorySummaryToJSON,
} from './CategorySummary';

/**
 * 
 * @export
 * @interface SummaryWithCats
 */
export interface SummaryWithCats {
    /**
     * 
     * @type {number}
     * @memberof SummaryWithCats
     */
    count?: number;
    /**
     * 
     * @type {number}
     * @memberof SummaryWithCats
     */
    time?: number;
    /**
     * 
     * @type {number}
     * @memberof SummaryWithCats
     */
    movingTime?: number;
    /**
     * 
     * @type {number}
     * @memberof SummaryWithCats
     */
    elapsedTime?: number;
    /**
     * 
     * @type {number}
     * @memberof SummaryWithCats
     */
    calories?: number;
    /**
     * 
     * @type {number}
     * @memberof SummaryWithCats
     */
    totalElevationGain?: number;
    /**
     * 
     * @type {number}
     * @memberof SummaryWithCats
     */
    trainingLoad?: number;
    /**
     * 
     * @type {number}
     * @memberof SummaryWithCats
     */
    srpe?: number;
    /**
     * 
     * @type {number}
     * @memberof SummaryWithCats
     */
    distance?: number;
    /**
     * 
     * @type {string}
     * @memberof SummaryWithCats
     */
    date?: string;
    /**
     * 
     * @type {string}
     * @memberof SummaryWithCats
     */
    athleteId?: string;
    /**
     * 
     * @type {string}
     * @memberof SummaryWithCats
     */
    athleteName?: string;
    /**
     * 
     * @type {string}
     * @memberof SummaryWithCats
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof SummaryWithCats
     */
    externalId?: string;
    /**
     * 
     * @type {number}
     * @memberof SummaryWithCats
     */
    fitness?: number;
    /**
     * 
     * @type {number}
     * @memberof SummaryWithCats
     */
    fatigue?: number;
    /**
     * 
     * @type {number}
     * @memberof SummaryWithCats
     */
    form?: number;
    /**
     * 
     * @type {number}
     * @memberof SummaryWithCats
     */
    rampRate?: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof SummaryWithCats
     */
    timeInZones?: Array<number>;
    /**
     * 
     * @type {number}
     * @memberof SummaryWithCats
     */
    timeInZonesTot?: number;
    /**
     * 
     * @type {Array<CategorySummary>}
     * @memberof SummaryWithCats
     */
    byCategory?: Array<CategorySummary>;
    /**
     * 
     * @type {string}
     * @memberof SummaryWithCats
     */
    mostRecentWellnessId?: string;
}

/**
 * Check if a given object implements the SummaryWithCats interface.
 */
export function instanceOfSummaryWithCats(value: object): value is SummaryWithCats {
    return true;
}

export function SummaryWithCatsFromJSON(json: any): SummaryWithCats {
    return SummaryWithCatsFromJSONTyped(json, false);
}

export function SummaryWithCatsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SummaryWithCats {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'] == null ? undefined : json['count'],
        'time': json['time'] == null ? undefined : json['time'],
        'movingTime': json['moving_time'] == null ? undefined : json['moving_time'],
        'elapsedTime': json['elapsed_time'] == null ? undefined : json['elapsed_time'],
        'calories': json['calories'] == null ? undefined : json['calories'],
        'totalElevationGain': json['total_elevation_gain'] == null ? undefined : json['total_elevation_gain'],
        'trainingLoad': json['training_load'] == null ? undefined : json['training_load'],
        'srpe': json['srpe'] == null ? undefined : json['srpe'],
        'distance': json['distance'] == null ? undefined : json['distance'],
        'date': json['date'] == null ? undefined : json['date'],
        'athleteId': json['athlete_id'] == null ? undefined : json['athlete_id'],
        'athleteName': json['athlete_name'] == null ? undefined : json['athlete_name'],
        'email': json['email'] == null ? undefined : json['email'],
        'externalId': json['external_id'] == null ? undefined : json['external_id'],
        'fitness': json['fitness'] == null ? undefined : json['fitness'],
        'fatigue': json['fatigue'] == null ? undefined : json['fatigue'],
        'form': json['form'] == null ? undefined : json['form'],
        'rampRate': json['rampRate'] == null ? undefined : json['rampRate'],
        'timeInZones': json['timeInZones'] == null ? undefined : json['timeInZones'],
        'timeInZonesTot': json['timeInZonesTot'] == null ? undefined : json['timeInZonesTot'],
        'byCategory': json['byCategory'] == null ? undefined : ((json['byCategory'] as Array<any>).map(CategorySummaryFromJSON)),
        'mostRecentWellnessId': json['mostRecentWellnessId'] == null ? undefined : json['mostRecentWellnessId'],
    };
}

export function SummaryWithCatsToJSON(value?: SummaryWithCats | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'count': value['count'],
        'time': value['time'],
        'moving_time': value['movingTime'],
        'elapsed_time': value['elapsedTime'],
        'calories': value['calories'],
        'total_elevation_gain': value['totalElevationGain'],
        'training_load': value['trainingLoad'],
        'srpe': value['srpe'],
        'distance': value['distance'],
        'date': value['date'],
        'athlete_id': value['athleteId'],
        'athlete_name': value['athleteName'],
        'email': value['email'],
        'external_id': value['externalId'],
        'fitness': value['fitness'],
        'fatigue': value['fatigue'],
        'form': value['form'],
        'rampRate': value['rampRate'],
        'timeInZones': value['timeInZones'],
        'timeInZonesTot': value['timeInZonesTot'],
        'byCategory': value['byCategory'] == null ? undefined : ((value['byCategory'] as Array<any>).map(CategorySummaryToJSON)),
        'mostRecentWellnessId': value['mostRecentWellnessId'],
    };
}

