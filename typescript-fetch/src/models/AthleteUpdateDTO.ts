/* tslint:disable */
/* eslint-disable */
/**
 * Intervals.icu API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StravaGear } from './StravaGear';
import {
    StravaGearFromJSON,
    StravaGearFromJSONTyped,
    StravaGearToJSON,
} from './StravaGear';
import type { ActivityFilter } from './ActivityFilter';
import {
    ActivityFilterFromJSON,
    ActivityFilterFromJSONTyped,
    ActivityFilterToJSON,
} from './ActivityFilter';
import type { CoachTick } from './CoachTick';
import {
    CoachTickFromJSON,
    CoachTickFromJSONTyped,
    CoachTickToJSON,
} from './CoachTick';
import type { Settings } from './Settings';
import {
    SettingsFromJSON,
    SettingsFromJSONTyped,
    SettingsToJSON,
} from './Settings';

/**
 * 
 * @export
 * @interface AthleteUpdateDTO
 */
export interface AthleteUpdateDTO {
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    firstname?: string;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    lastname?: string;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    profileMedium?: string;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    measurementPreference?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    weightPrefLb?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    fahrenheit?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    windSpeed?: AthleteUpdateDTOWindSpeedEnum;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    rain?: AthleteUpdateDTORainEnum;
    /**
     * 
     * @type {number}
     * @memberof AthleteUpdateDTO
     */
    weight?: number;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    sex?: string;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    city?: string;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    state?: string;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    country?: string;
    /**
     * 
     * @type {Array<StravaGear>}
     * @memberof AthleteUpdateDTO
     */
    bikes?: Array<StravaGear>;
    /**
     * 
     * @type {Array<StravaGear>}
     * @memberof AthleteUpdateDTO
     */
    shoes?: Array<StravaGear>;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    timezone?: string;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    locale?: string;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    visibility?: AthleteUpdateDTOVisibilityEnum;
    /**
     * 
     * @type {number}
     * @memberof AthleteUpdateDTO
     */
    icuRestingHr?: number;
    /**
     * 
     * @type {number}
     * @memberof AthleteUpdateDTO
     */
    icuWeight?: number;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    icuWeightSync?: AthleteUpdateDTOIcuWeightSyncEnum;
    /**
     * 
     * @type {Date}
     * @memberof AthleteUpdateDTO
     */
    icuLastSeen?: Date;
    /**
     * 
     * @type {Date}
     * @memberof AthleteUpdateDTO
     */
    icuActivated?: Date;
    /**
     * 
     * @type {number}
     * @memberof AthleteUpdateDTO
     */
    icuQueuePos?: number;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuAdmin?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    icuFriendInviteToken?: string;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    icuPermission?: AthleteUpdateDTOIcuPermissionEnum;
    /**
     * 
     * @type {Array<number>}
     * @memberof AthleteUpdateDTO
     */
    icuEffortSecs?: Array<number>;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuCoach?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    bio?: string;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    website?: string;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    icuDateOfBirth?: string;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    icuApiKey?: string;
    /**
     * 
     * @type {Array<Settings>}
     * @memberof AthleteUpdateDTO
     */
    icuTypeSettings?: Array<Settings>;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuFormAsPercent?: boolean;
    /**
     * 
     * @type {number}
     * @memberof AthleteUpdateDTO
     */
    icuMmpDays?: number;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuWellnessPrompt?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof AthleteUpdateDTO
     */
    icuWellnessKeys?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuTrackMenstrualCycle?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    icuMenstrualCyclePerm?: AthleteUpdateDTOIcuMenstrualCyclePermEnum;
    /**
     * 
     * @type {Array<CoachTick>}
     * @memberof AthleteUpdateDTO
     */
    coachTicks?: Array<CoachTick>;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuGarminHealth?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuGarminTraining?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuGarminSyncActivities?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof AthleteUpdateDTO
     */
    garminSyncActivityTypes?: Array<AthleteUpdateDTOGarminSyncActivityTypesEnum>;
    /**
     * 
     * @type {Date}
     * @memberof AthleteUpdateDTO
     */
    garminSyncAfter?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuGarminDownloadWellness?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuGarminUploadWorkouts?: boolean;
    /**
     * 
     * @type {number}
     * @memberof AthleteUpdateDTO
     */
    icuGarminOutdoorPowerRange?: number;
    /**
     * 
     * @type {number}
     * @memberof AthleteUpdateDTO
     */
    icuGarminHrRange?: number;
    /**
     * 
     * @type {number}
     * @memberof AthleteUpdateDTO
     */
    garminPaceRange?: number;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    garminPowerTarget?: AthleteUpdateDTOGarminPowerTargetEnum;
    /**
     * 
     * @type {Date}
     * @memberof AthleteUpdateDTO
     */
    icuGarminLastUpload?: Date;
    /**
     * 
     * @type {Array<ActivityFilter>}
     * @memberof AthleteUpdateDTO
     */
    icuGarminUploadFilters?: Array<ActivityFilter>;
    /**
     * 
     * @type {Array<string>}
     * @memberof AthleteUpdateDTO
     */
    icuGarminWellnessKeys?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof AthleteUpdateDTO
     */
    openStepDuration?: number;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    polarScope?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    polarSyncActivities?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof AthleteUpdateDTO
     */
    polarSyncActivityTypes?: Array<AthleteUpdateDTOPolarSyncActivityTypesEnum>;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    polarDownloadWellness?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof AthleteUpdateDTO
     */
    polarWellnessKeys?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    suuntoScope?: string;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    suuntoUserId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    suuntoSyncActivities?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof AthleteUpdateDTO
     */
    suuntoSyncActivityTypes?: Array<AthleteUpdateDTOSuuntoSyncActivityTypesEnum>;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    suuntoUploadWorkouts?: boolean;
    /**
     * 
     * @type {number}
     * @memberof AthleteUpdateDTO
     */
    suuntoOutdoorPowerRange?: number;
    /**
     * 
     * @type {number}
     * @memberof AthleteUpdateDTO
     */
    suuntoHrRange?: number;
    /**
     * 
     * @type {number}
     * @memberof AthleteUpdateDTO
     */
    suuntoPaceRange?: number;
    /**
     * 
     * @type {Date}
     * @memberof AthleteUpdateDTO
     */
    suuntoLastUpload?: Date;
    /**
     * 
     * @type {Array<ActivityFilter>}
     * @memberof AthleteUpdateDTO
     */
    suuntoUploadFilters?: Array<ActivityFilter>;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    corosUserId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    corosSyncActivities?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    corosUploadWorkouts?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    corosDownloadWellness?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof AthleteUpdateDTO
     */
    corosLastUpload?: Date;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    wahooUserId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    wahooSyncActivities?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    wahooUploadWorkouts?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    dropboxScope?: string;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    ouraScope?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof AthleteUpdateDTO
     */
    ouraWellnessKeys?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    whoopScope?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof AthleteUpdateDTO
     */
    whoopWellnessKeys?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    googleScope?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof AthleteUpdateDTO
     */
    googleWellnessKeys?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuEmailVerified?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    icuEmailDisabled?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuSendAchievements?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuSendNewsletter?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuSendPrivateChat?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuSendPrivateMsg?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuSendFollowReq?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuSendGroupChat?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuSendGroupMsg?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuSendActivityChat?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuSendFollowedActivityChat?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuSendCoachedActivityChat?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuSendActivityMsg?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuSendCoachMeReq?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuSendGearAlerts?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuSendPlanForWeek?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    includeDescrInPlanForWeek?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuSendFollowedNewActivity?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuSendCoachedNewActivity?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    icuSendCoachTick?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    stravaAllowed?: boolean;
    /**
     * 
     * @type {number}
     * @memberof AthleteUpdateDTO
     */
    stravaId?: number;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    scope?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    stravaSyncActivities?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof AthleteUpdateDTO
     */
    stravaSyncActivityTypes?: Array<AthleteUpdateDTOStravaSyncActivityTypesEnum>;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    stravaSyncOtherActivities?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    ignoreStravaGear?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    updateStravaName?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    plan?: AthleteUpdateDTOPlanEnum;
    /**
     * 
     * @type {Date}
     * @memberof AthleteUpdateDTO
     */
    planExpires?: Date;
    /**
     * 
     * @type {Date}
     * @memberof AthleteUpdateDTO
     */
    trialEndDate?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    hasPassword?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    betaUser?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    currency?: string;
    /**
     * 
     * @type {number}
     * @memberof AthleteUpdateDTO
     */
    trainingPlanId?: number;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    trainingPlanStartDate?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    recalcHrZones?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    applyToAll?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    localDate?: string;
    /**
     * 
     * @type {string}
     * @memberof AthleteUpdateDTO
     */
    password?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AthleteUpdateDTO
     */
    stravaAuthorized?: boolean;
}


/**
 * @export
 */
export const AthleteUpdateDTOWindSpeedEnum = {
    Mps: 'MPS',
    Knots: 'KNOTS',
    Kmh: 'KMH',
    Mph: 'MPH',
    Bft: 'BFT'
} as const;
export type AthleteUpdateDTOWindSpeedEnum = typeof AthleteUpdateDTOWindSpeedEnum[keyof typeof AthleteUpdateDTOWindSpeedEnum];

/**
 * @export
 */
export const AthleteUpdateDTORainEnum = {
    Mm: 'MM',
    Inches: 'INCHES'
} as const;
export type AthleteUpdateDTORainEnum = typeof AthleteUpdateDTORainEnum[keyof typeof AthleteUpdateDTORainEnum];

/**
 * @export
 */
export const AthleteUpdateDTOVisibilityEnum = {
    Private: 'PRIVATE',
    Public: 'PUBLIC'
} as const;
export type AthleteUpdateDTOVisibilityEnum = typeof AthleteUpdateDTOVisibilityEnum[keyof typeof AthleteUpdateDTOVisibilityEnum];

/**
 * @export
 */
export const AthleteUpdateDTOIcuWeightSyncEnum = {
    None: 'NONE',
    Strava: 'STRAVA'
} as const;
export type AthleteUpdateDTOIcuWeightSyncEnum = typeof AthleteUpdateDTOIcuWeightSyncEnum[keyof typeof AthleteUpdateDTOIcuWeightSyncEnum];

/**
 * @export
 */
export const AthleteUpdateDTOIcuPermissionEnum = {
    None: 'NONE',
    Read: 'READ',
    Write: 'WRITE'
} as const;
export type AthleteUpdateDTOIcuPermissionEnum = typeof AthleteUpdateDTOIcuPermissionEnum[keyof typeof AthleteUpdateDTOIcuPermissionEnum];

/**
 * @export
 */
export const AthleteUpdateDTOIcuMenstrualCyclePermEnum = {
    None: 'NONE',
    Read: 'READ',
    Write: 'WRITE'
} as const;
export type AthleteUpdateDTOIcuMenstrualCyclePermEnum = typeof AthleteUpdateDTOIcuMenstrualCyclePermEnum[keyof typeof AthleteUpdateDTOIcuMenstrualCyclePermEnum];

/**
 * @export
 */
export const AthleteUpdateDTOGarminSyncActivityTypesEnum = {
    Ride: 'Ride',
    Run: 'Run',
    Swim: 'Swim',
    WeightTraining: 'WeightTraining',
    Hike: 'Hike',
    Walk: 'Walk',
    AlpineSki: 'AlpineSki',
    BackcountrySki: 'BackcountrySki',
    Badminton: 'Badminton',
    Canoeing: 'Canoeing',
    Crossfit: 'Crossfit',
    EBikeRide: 'EBikeRide',
    EMountainBikeRide: 'EMountainBikeRide',
    Elliptical: 'Elliptical',
    Golf: 'Golf',
    GravelRide: 'GravelRide',
    Handcycle: 'Handcycle',
    HighIntensityIntervalTraining: 'HighIntensityIntervalTraining',
    Hockey: 'Hockey',
    IceSkate: 'IceSkate',
    InlineSkate: 'InlineSkate',
    Kayaking: 'Kayaking',
    Kitesurf: 'Kitesurf',
    MountainBikeRide: 'MountainBikeRide',
    NordicSki: 'NordicSki',
    OpenWaterSwim: 'OpenWaterSwim',
    Padel: 'Padel',
    Pilates: 'Pilates',
    Pickleball: 'Pickleball',
    Racquetball: 'Racquetball',
    Rugby: 'Rugby',
    RockClimbing: 'RockClimbing',
    RollerSki: 'RollerSki',
    Rowing: 'Rowing',
    Sail: 'Sail',
    Skateboard: 'Skateboard',
    Snowboard: 'Snowboard',
    Snowshoe: 'Snowshoe',
    Soccer: 'Soccer',
    Squash: 'Squash',
    StairStepper: 'StairStepper',
    StandUpPaddling: 'StandUpPaddling',
    Surfing: 'Surfing',
    TableTennis: 'TableTennis',
    Tennis: 'Tennis',
    TrailRun: 'TrailRun',
    Transition: 'Transition',
    Velomobile: 'Velomobile',
    VirtualRide: 'VirtualRide',
    VirtualRow: 'VirtualRow',
    VirtualRun: 'VirtualRun',
    WaterSport: 'WaterSport',
    Wheelchair: 'Wheelchair',
    Windsurf: 'Windsurf',
    Workout: 'Workout',
    Yoga: 'Yoga',
    Other: 'Other'
} as const;
export type AthleteUpdateDTOGarminSyncActivityTypesEnum = typeof AthleteUpdateDTOGarminSyncActivityTypesEnum[keyof typeof AthleteUpdateDTOGarminSyncActivityTypesEnum];

/**
 * @export
 */
export const AthleteUpdateDTOGarminPowerTargetEnum = {
    PowerLap: 'POWER_LAP',
    Power: 'POWER',
    Power3S: 'POWER_3S',
    Power10S: 'POWER_10S',
    Power30S: 'POWER_30S'
} as const;
export type AthleteUpdateDTOGarminPowerTargetEnum = typeof AthleteUpdateDTOGarminPowerTargetEnum[keyof typeof AthleteUpdateDTOGarminPowerTargetEnum];

/**
 * @export
 */
export const AthleteUpdateDTOPolarSyncActivityTypesEnum = {
    Ride: 'Ride',
    Run: 'Run',
    Swim: 'Swim',
    WeightTraining: 'WeightTraining',
    Hike: 'Hike',
    Walk: 'Walk',
    AlpineSki: 'AlpineSki',
    BackcountrySki: 'BackcountrySki',
    Badminton: 'Badminton',
    Canoeing: 'Canoeing',
    Crossfit: 'Crossfit',
    EBikeRide: 'EBikeRide',
    EMountainBikeRide: 'EMountainBikeRide',
    Elliptical: 'Elliptical',
    Golf: 'Golf',
    GravelRide: 'GravelRide',
    Handcycle: 'Handcycle',
    HighIntensityIntervalTraining: 'HighIntensityIntervalTraining',
    Hockey: 'Hockey',
    IceSkate: 'IceSkate',
    InlineSkate: 'InlineSkate',
    Kayaking: 'Kayaking',
    Kitesurf: 'Kitesurf',
    MountainBikeRide: 'MountainBikeRide',
    NordicSki: 'NordicSki',
    OpenWaterSwim: 'OpenWaterSwim',
    Padel: 'Padel',
    Pilates: 'Pilates',
    Pickleball: 'Pickleball',
    Racquetball: 'Racquetball',
    Rugby: 'Rugby',
    RockClimbing: 'RockClimbing',
    RollerSki: 'RollerSki',
    Rowing: 'Rowing',
    Sail: 'Sail',
    Skateboard: 'Skateboard',
    Snowboard: 'Snowboard',
    Snowshoe: 'Snowshoe',
    Soccer: 'Soccer',
    Squash: 'Squash',
    StairStepper: 'StairStepper',
    StandUpPaddling: 'StandUpPaddling',
    Surfing: 'Surfing',
    TableTennis: 'TableTennis',
    Tennis: 'Tennis',
    TrailRun: 'TrailRun',
    Transition: 'Transition',
    Velomobile: 'Velomobile',
    VirtualRide: 'VirtualRide',
    VirtualRow: 'VirtualRow',
    VirtualRun: 'VirtualRun',
    WaterSport: 'WaterSport',
    Wheelchair: 'Wheelchair',
    Windsurf: 'Windsurf',
    Workout: 'Workout',
    Yoga: 'Yoga',
    Other: 'Other'
} as const;
export type AthleteUpdateDTOPolarSyncActivityTypesEnum = typeof AthleteUpdateDTOPolarSyncActivityTypesEnum[keyof typeof AthleteUpdateDTOPolarSyncActivityTypesEnum];

/**
 * @export
 */
export const AthleteUpdateDTOSuuntoSyncActivityTypesEnum = {
    Ride: 'Ride',
    Run: 'Run',
    Swim: 'Swim',
    WeightTraining: 'WeightTraining',
    Hike: 'Hike',
    Walk: 'Walk',
    AlpineSki: 'AlpineSki',
    BackcountrySki: 'BackcountrySki',
    Badminton: 'Badminton',
    Canoeing: 'Canoeing',
    Crossfit: 'Crossfit',
    EBikeRide: 'EBikeRide',
    EMountainBikeRide: 'EMountainBikeRide',
    Elliptical: 'Elliptical',
    Golf: 'Golf',
    GravelRide: 'GravelRide',
    Handcycle: 'Handcycle',
    HighIntensityIntervalTraining: 'HighIntensityIntervalTraining',
    Hockey: 'Hockey',
    IceSkate: 'IceSkate',
    InlineSkate: 'InlineSkate',
    Kayaking: 'Kayaking',
    Kitesurf: 'Kitesurf',
    MountainBikeRide: 'MountainBikeRide',
    NordicSki: 'NordicSki',
    OpenWaterSwim: 'OpenWaterSwim',
    Padel: 'Padel',
    Pilates: 'Pilates',
    Pickleball: 'Pickleball',
    Racquetball: 'Racquetball',
    Rugby: 'Rugby',
    RockClimbing: 'RockClimbing',
    RollerSki: 'RollerSki',
    Rowing: 'Rowing',
    Sail: 'Sail',
    Skateboard: 'Skateboard',
    Snowboard: 'Snowboard',
    Snowshoe: 'Snowshoe',
    Soccer: 'Soccer',
    Squash: 'Squash',
    StairStepper: 'StairStepper',
    StandUpPaddling: 'StandUpPaddling',
    Surfing: 'Surfing',
    TableTennis: 'TableTennis',
    Tennis: 'Tennis',
    TrailRun: 'TrailRun',
    Transition: 'Transition',
    Velomobile: 'Velomobile',
    VirtualRide: 'VirtualRide',
    VirtualRow: 'VirtualRow',
    VirtualRun: 'VirtualRun',
    WaterSport: 'WaterSport',
    Wheelchair: 'Wheelchair',
    Windsurf: 'Windsurf',
    Workout: 'Workout',
    Yoga: 'Yoga',
    Other: 'Other'
} as const;
export type AthleteUpdateDTOSuuntoSyncActivityTypesEnum = typeof AthleteUpdateDTOSuuntoSyncActivityTypesEnum[keyof typeof AthleteUpdateDTOSuuntoSyncActivityTypesEnum];

/**
 * @export
 */
export const AthleteUpdateDTOStravaSyncActivityTypesEnum = {
    Ride: 'Ride',
    Run: 'Run',
    Swim: 'Swim',
    WeightTraining: 'WeightTraining',
    Hike: 'Hike',
    Walk: 'Walk',
    AlpineSki: 'AlpineSki',
    BackcountrySki: 'BackcountrySki',
    Badminton: 'Badminton',
    Canoeing: 'Canoeing',
    Crossfit: 'Crossfit',
    EBikeRide: 'EBikeRide',
    EMountainBikeRide: 'EMountainBikeRide',
    Elliptical: 'Elliptical',
    Golf: 'Golf',
    GravelRide: 'GravelRide',
    Handcycle: 'Handcycle',
    HighIntensityIntervalTraining: 'HighIntensityIntervalTraining',
    Hockey: 'Hockey',
    IceSkate: 'IceSkate',
    InlineSkate: 'InlineSkate',
    Kayaking: 'Kayaking',
    Kitesurf: 'Kitesurf',
    MountainBikeRide: 'MountainBikeRide',
    NordicSki: 'NordicSki',
    OpenWaterSwim: 'OpenWaterSwim',
    Padel: 'Padel',
    Pilates: 'Pilates',
    Pickleball: 'Pickleball',
    Racquetball: 'Racquetball',
    Rugby: 'Rugby',
    RockClimbing: 'RockClimbing',
    RollerSki: 'RollerSki',
    Rowing: 'Rowing',
    Sail: 'Sail',
    Skateboard: 'Skateboard',
    Snowboard: 'Snowboard',
    Snowshoe: 'Snowshoe',
    Soccer: 'Soccer',
    Squash: 'Squash',
    StairStepper: 'StairStepper',
    StandUpPaddling: 'StandUpPaddling',
    Surfing: 'Surfing',
    TableTennis: 'TableTennis',
    Tennis: 'Tennis',
    TrailRun: 'TrailRun',
    Transition: 'Transition',
    Velomobile: 'Velomobile',
    VirtualRide: 'VirtualRide',
    VirtualRow: 'VirtualRow',
    VirtualRun: 'VirtualRun',
    WaterSport: 'WaterSport',
    Wheelchair: 'Wheelchair',
    Windsurf: 'Windsurf',
    Workout: 'Workout',
    Yoga: 'Yoga',
    Other: 'Other'
} as const;
export type AthleteUpdateDTOStravaSyncActivityTypesEnum = typeof AthleteUpdateDTOStravaSyncActivityTypesEnum[keyof typeof AthleteUpdateDTOStravaSyncActivityTypesEnum];

/**
 * @export
 */
export const AthleteUpdateDTOPlanEnum = {
    Free: 'FREE',
    Premium: 'PREMIUM',
    Supporter: 'SUPPORTER',
    Whitelabel: 'WHITELABEL'
} as const;
export type AthleteUpdateDTOPlanEnum = typeof AthleteUpdateDTOPlanEnum[keyof typeof AthleteUpdateDTOPlanEnum];


/**
 * Check if a given object implements the AthleteUpdateDTO interface.
 */
export function instanceOfAthleteUpdateDTO(value: object): value is AthleteUpdateDTO {
    return true;
}

export function AthleteUpdateDTOFromJSON(json: any): AthleteUpdateDTO {
    return AthleteUpdateDTOFromJSONTyped(json, false);
}

export function AthleteUpdateDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): AthleteUpdateDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'firstname': json['firstname'] == null ? undefined : json['firstname'],
        'lastname': json['lastname'] == null ? undefined : json['lastname'],
        'profileMedium': json['profile_medium'] == null ? undefined : json['profile_medium'],
        'measurementPreference': json['measurement_preference'] == null ? undefined : json['measurement_preference'],
        'weightPrefLb': json['weight_pref_lb'] == null ? undefined : json['weight_pref_lb'],
        'fahrenheit': json['fahrenheit'] == null ? undefined : json['fahrenheit'],
        'windSpeed': json['wind_speed'] == null ? undefined : json['wind_speed'],
        'rain': json['rain'] == null ? undefined : json['rain'],
        'weight': json['weight'] == null ? undefined : json['weight'],
        'email': json['email'] == null ? undefined : json['email'],
        'sex': json['sex'] == null ? undefined : json['sex'],
        'city': json['city'] == null ? undefined : json['city'],
        'state': json['state'] == null ? undefined : json['state'],
        'country': json['country'] == null ? undefined : json['country'],
        'bikes': json['bikes'] == null ? undefined : ((json['bikes'] as Array<any>).map(StravaGearFromJSON)),
        'shoes': json['shoes'] == null ? undefined : ((json['shoes'] as Array<any>).map(StravaGearFromJSON)),
        'timezone': json['timezone'] == null ? undefined : json['timezone'],
        'locale': json['locale'] == null ? undefined : json['locale'],
        'visibility': json['visibility'] == null ? undefined : json['visibility'],
        'icuRestingHr': json['icu_resting_hr'] == null ? undefined : json['icu_resting_hr'],
        'icuWeight': json['icu_weight'] == null ? undefined : json['icu_weight'],
        'icuWeightSync': json['icu_weight_sync'] == null ? undefined : json['icu_weight_sync'],
        'icuLastSeen': json['icu_last_seen'] == null ? undefined : (new Date(json['icu_last_seen'])),
        'icuActivated': json['icu_activated'] == null ? undefined : (new Date(json['icu_activated'])),
        'icuQueuePos': json['icu_queue_pos'] == null ? undefined : json['icu_queue_pos'],
        'icuAdmin': json['icu_admin'] == null ? undefined : json['icu_admin'],
        'icuFriendInviteToken': json['icu_friend_invite_token'] == null ? undefined : json['icu_friend_invite_token'],
        'icuPermission': json['icu_permission'] == null ? undefined : json['icu_permission'],
        'icuEffortSecs': json['icu_effort_secs'] == null ? undefined : json['icu_effort_secs'],
        'icuCoach': json['icu_coach'] == null ? undefined : json['icu_coach'],
        'bio': json['bio'] == null ? undefined : json['bio'],
        'website': json['website'] == null ? undefined : json['website'],
        'icuDateOfBirth': json['icu_date_of_birth'] == null ? undefined : json['icu_date_of_birth'],
        'icuApiKey': json['icu_api_key'] == null ? undefined : json['icu_api_key'],
        'icuTypeSettings': json['icu_type_settings'] == null ? undefined : ((json['icu_type_settings'] as Array<any>).map(SettingsFromJSON)),
        'icuFormAsPercent': json['icu_form_as_percent'] == null ? undefined : json['icu_form_as_percent'],
        'icuMmpDays': json['icu_mmp_days'] == null ? undefined : json['icu_mmp_days'],
        'icuWellnessPrompt': json['icu_wellness_prompt'] == null ? undefined : json['icu_wellness_prompt'],
        'icuWellnessKeys': json['icu_wellness_keys'] == null ? undefined : json['icu_wellness_keys'],
        'icuTrackMenstrualCycle': json['icu_track_menstrual_cycle'] == null ? undefined : json['icu_track_menstrual_cycle'],
        'icuMenstrualCyclePerm': json['icu_menstrual_cycle_perm'] == null ? undefined : json['icu_menstrual_cycle_perm'],
        'coachTicks': json['coach_ticks'] == null ? undefined : ((json['coach_ticks'] as Array<any>).map(CoachTickFromJSON)),
        'icuGarminHealth': json['icu_garmin_health'] == null ? undefined : json['icu_garmin_health'],
        'icuGarminTraining': json['icu_garmin_training'] == null ? undefined : json['icu_garmin_training'],
        'icuGarminSyncActivities': json['icu_garmin_sync_activities'] == null ? undefined : json['icu_garmin_sync_activities'],
        'garminSyncActivityTypes': json['garmin_sync_activity_types'] == null ? undefined : json['garmin_sync_activity_types'],
        'garminSyncAfter': json['garmin_sync_after'] == null ? undefined : (new Date(json['garmin_sync_after'])),
        'icuGarminDownloadWellness': json['icu_garmin_download_wellness'] == null ? undefined : json['icu_garmin_download_wellness'],
        'icuGarminUploadWorkouts': json['icu_garmin_upload_workouts'] == null ? undefined : json['icu_garmin_upload_workouts'],
        'icuGarminOutdoorPowerRange': json['icu_garmin_outdoor_power_range'] == null ? undefined : json['icu_garmin_outdoor_power_range'],
        'icuGarminHrRange': json['icu_garmin_hr_range'] == null ? undefined : json['icu_garmin_hr_range'],
        'garminPaceRange': json['garmin_pace_range'] == null ? undefined : json['garmin_pace_range'],
        'garminPowerTarget': json['garmin_power_target'] == null ? undefined : json['garmin_power_target'],
        'icuGarminLastUpload': json['icu_garmin_last_upload'] == null ? undefined : (new Date(json['icu_garmin_last_upload'])),
        'icuGarminUploadFilters': json['icu_garmin_upload_filters'] == null ? undefined : ((json['icu_garmin_upload_filters'] as Array<any>).map(ActivityFilterFromJSON)),
        'icuGarminWellnessKeys': json['icu_garmin_wellness_keys'] == null ? undefined : json['icu_garmin_wellness_keys'],
        'openStepDuration': json['open_step_duration'] == null ? undefined : json['open_step_duration'],
        'polarScope': json['polar_scope'] == null ? undefined : json['polar_scope'],
        'polarSyncActivities': json['polar_sync_activities'] == null ? undefined : json['polar_sync_activities'],
        'polarSyncActivityTypes': json['polar_sync_activity_types'] == null ? undefined : json['polar_sync_activity_types'],
        'polarDownloadWellness': json['polar_download_wellness'] == null ? undefined : json['polar_download_wellness'],
        'polarWellnessKeys': json['polar_wellness_keys'] == null ? undefined : json['polar_wellness_keys'],
        'suuntoScope': json['suunto_scope'] == null ? undefined : json['suunto_scope'],
        'suuntoUserId': json['suunto_user_id'] == null ? undefined : json['suunto_user_id'],
        'suuntoSyncActivities': json['suunto_sync_activities'] == null ? undefined : json['suunto_sync_activities'],
        'suuntoSyncActivityTypes': json['suunto_sync_activity_types'] == null ? undefined : json['suunto_sync_activity_types'],
        'suuntoUploadWorkouts': json['suunto_upload_workouts'] == null ? undefined : json['suunto_upload_workouts'],
        'suuntoOutdoorPowerRange': json['suunto_outdoor_power_range'] == null ? undefined : json['suunto_outdoor_power_range'],
        'suuntoHrRange': json['suunto_hr_range'] == null ? undefined : json['suunto_hr_range'],
        'suuntoPaceRange': json['suunto_pace_range'] == null ? undefined : json['suunto_pace_range'],
        'suuntoLastUpload': json['suunto_last_upload'] == null ? undefined : (new Date(json['suunto_last_upload'])),
        'suuntoUploadFilters': json['suunto_upload_filters'] == null ? undefined : ((json['suunto_upload_filters'] as Array<any>).map(ActivityFilterFromJSON)),
        'corosUserId': json['coros_user_id'] == null ? undefined : json['coros_user_id'],
        'corosSyncActivities': json['coros_sync_activities'] == null ? undefined : json['coros_sync_activities'],
        'corosUploadWorkouts': json['coros_upload_workouts'] == null ? undefined : json['coros_upload_workouts'],
        'corosDownloadWellness': json['coros_download_wellness'] == null ? undefined : json['coros_download_wellness'],
        'corosLastUpload': json['coros_last_upload'] == null ? undefined : (new Date(json['coros_last_upload'])),
        'wahooUserId': json['wahoo_user_id'] == null ? undefined : json['wahoo_user_id'],
        'wahooSyncActivities': json['wahoo_sync_activities'] == null ? undefined : json['wahoo_sync_activities'],
        'wahooUploadWorkouts': json['wahoo_upload_workouts'] == null ? undefined : json['wahoo_upload_workouts'],
        'dropboxScope': json['dropbox_scope'] == null ? undefined : json['dropbox_scope'],
        'ouraScope': json['oura_scope'] == null ? undefined : json['oura_scope'],
        'ouraWellnessKeys': json['oura_wellness_keys'] == null ? undefined : json['oura_wellness_keys'],
        'whoopScope': json['whoop_scope'] == null ? undefined : json['whoop_scope'],
        'whoopWellnessKeys': json['whoop_wellness_keys'] == null ? undefined : json['whoop_wellness_keys'],
        'googleScope': json['google_scope'] == null ? undefined : json['google_scope'],
        'googleWellnessKeys': json['google_wellness_keys'] == null ? undefined : json['google_wellness_keys'],
        'icuEmailVerified': json['icu_email_verified'] == null ? undefined : json['icu_email_verified'],
        'icuEmailDisabled': json['icu_email_disabled'] == null ? undefined : json['icu_email_disabled'],
        'icuSendAchievements': json['icu_send_achievements'] == null ? undefined : json['icu_send_achievements'],
        'icuSendNewsletter': json['icu_send_newsletter'] == null ? undefined : json['icu_send_newsletter'],
        'icuSendPrivateChat': json['icu_send_private_chat'] == null ? undefined : json['icu_send_private_chat'],
        'icuSendPrivateMsg': json['icu_send_private_msg'] == null ? undefined : json['icu_send_private_msg'],
        'icuSendFollowReq': json['icu_send_follow_req'] == null ? undefined : json['icu_send_follow_req'],
        'icuSendGroupChat': json['icu_send_group_chat'] == null ? undefined : json['icu_send_group_chat'],
        'icuSendGroupMsg': json['icu_send_group_msg'] == null ? undefined : json['icu_send_group_msg'],
        'icuSendActivityChat': json['icu_send_activity_chat'] == null ? undefined : json['icu_send_activity_chat'],
        'icuSendFollowedActivityChat': json['icu_send_followed_activity_chat'] == null ? undefined : json['icu_send_followed_activity_chat'],
        'icuSendCoachedActivityChat': json['icu_send_coached_activity_chat'] == null ? undefined : json['icu_send_coached_activity_chat'],
        'icuSendActivityMsg': json['icu_send_activity_msg'] == null ? undefined : json['icu_send_activity_msg'],
        'icuSendCoachMeReq': json['icu_send_coach_me_req'] == null ? undefined : json['icu_send_coach_me_req'],
        'icuSendGearAlerts': json['icu_send_gear_alerts'] == null ? undefined : json['icu_send_gear_alerts'],
        'icuSendPlanForWeek': json['icu_send_plan_for_week'] == null ? undefined : json['icu_send_plan_for_week'],
        'includeDescrInPlanForWeek': json['include_descr_in_plan_for_week'] == null ? undefined : json['include_descr_in_plan_for_week'],
        'icuSendFollowedNewActivity': json['icu_send_followed_new_activity'] == null ? undefined : json['icu_send_followed_new_activity'],
        'icuSendCoachedNewActivity': json['icu_send_coached_new_activity'] == null ? undefined : json['icu_send_coached_new_activity'],
        'icuSendCoachTick': json['icu_send_coach_tick'] == null ? undefined : json['icu_send_coach_tick'],
        'stravaAllowed': json['strava_allowed'] == null ? undefined : json['strava_allowed'],
        'stravaId': json['strava_id'] == null ? undefined : json['strava_id'],
        'scope': json['scope'] == null ? undefined : json['scope'],
        'stravaSyncActivities': json['strava_sync_activities'] == null ? undefined : json['strava_sync_activities'],
        'stravaSyncActivityTypes': json['strava_sync_activity_types'] == null ? undefined : json['strava_sync_activity_types'],
        'stravaSyncOtherActivities': json['strava_sync_other_activities'] == null ? undefined : json['strava_sync_other_activities'],
        'ignoreStravaGear': json['ignore_strava_gear'] == null ? undefined : json['ignore_strava_gear'],
        'updateStravaName': json['update_strava_name'] == null ? undefined : json['update_strava_name'],
        'plan': json['plan'] == null ? undefined : json['plan'],
        'planExpires': json['plan_expires'] == null ? undefined : (new Date(json['plan_expires'])),
        'trialEndDate': json['trial_end_date'] == null ? undefined : (new Date(json['trial_end_date'])),
        'hasPassword': json['has_password'] == null ? undefined : json['has_password'],
        'betaUser': json['beta_user'] == null ? undefined : json['beta_user'],
        'currency': json['currency'] == null ? undefined : json['currency'],
        'trainingPlanId': json['training_plan_id'] == null ? undefined : json['training_plan_id'],
        'trainingPlanStartDate': json['training_plan_start_date'] == null ? undefined : json['training_plan_start_date'],
        'recalcHrZones': json['recalcHrZones'] == null ? undefined : json['recalcHrZones'],
        'applyToAll': json['applyToAll'] == null ? undefined : json['applyToAll'],
        'localDate': json['localDate'] == null ? undefined : json['localDate'],
        'password': json['password'] == null ? undefined : json['password'],
        'stravaAuthorized': json['strava_authorized'] == null ? undefined : json['strava_authorized'],
    };
}

export function AthleteUpdateDTOToJSON(value?: AthleteUpdateDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'firstname': value['firstname'],
        'lastname': value['lastname'],
        'profile_medium': value['profileMedium'],
        'measurement_preference': value['measurementPreference'],
        'weight_pref_lb': value['weightPrefLb'],
        'fahrenheit': value['fahrenheit'],
        'wind_speed': value['windSpeed'],
        'rain': value['rain'],
        'weight': value['weight'],
        'email': value['email'],
        'sex': value['sex'],
        'city': value['city'],
        'state': value['state'],
        'country': value['country'],
        'bikes': value['bikes'] == null ? undefined : ((value['bikes'] as Array<any>).map(StravaGearToJSON)),
        'shoes': value['shoes'] == null ? undefined : ((value['shoes'] as Array<any>).map(StravaGearToJSON)),
        'timezone': value['timezone'],
        'locale': value['locale'],
        'visibility': value['visibility'],
        'icu_resting_hr': value['icuRestingHr'],
        'icu_weight': value['icuWeight'],
        'icu_weight_sync': value['icuWeightSync'],
        'icu_last_seen': value['icuLastSeen'] == null ? undefined : ((value['icuLastSeen']).toISOString()),
        'icu_activated': value['icuActivated'] == null ? undefined : ((value['icuActivated']).toISOString()),
        'icu_queue_pos': value['icuQueuePos'],
        'icu_admin': value['icuAdmin'],
        'icu_friend_invite_token': value['icuFriendInviteToken'],
        'icu_permission': value['icuPermission'],
        'icu_effort_secs': value['icuEffortSecs'],
        'icu_coach': value['icuCoach'],
        'bio': value['bio'],
        'website': value['website'],
        'icu_date_of_birth': value['icuDateOfBirth'],
        'icu_api_key': value['icuApiKey'],
        'icu_type_settings': value['icuTypeSettings'] == null ? undefined : ((value['icuTypeSettings'] as Array<any>).map(SettingsToJSON)),
        'icu_form_as_percent': value['icuFormAsPercent'],
        'icu_mmp_days': value['icuMmpDays'],
        'icu_wellness_prompt': value['icuWellnessPrompt'],
        'icu_wellness_keys': value['icuWellnessKeys'],
        'icu_track_menstrual_cycle': value['icuTrackMenstrualCycle'],
        'icu_menstrual_cycle_perm': value['icuMenstrualCyclePerm'],
        'coach_ticks': value['coachTicks'] == null ? undefined : ((value['coachTicks'] as Array<any>).map(CoachTickToJSON)),
        'icu_garmin_health': value['icuGarminHealth'],
        'icu_garmin_training': value['icuGarminTraining'],
        'icu_garmin_sync_activities': value['icuGarminSyncActivities'],
        'garmin_sync_activity_types': value['garminSyncActivityTypes'],
        'garmin_sync_after': value['garminSyncAfter'] == null ? undefined : ((value['garminSyncAfter']).toISOString()),
        'icu_garmin_download_wellness': value['icuGarminDownloadWellness'],
        'icu_garmin_upload_workouts': value['icuGarminUploadWorkouts'],
        'icu_garmin_outdoor_power_range': value['icuGarminOutdoorPowerRange'],
        'icu_garmin_hr_range': value['icuGarminHrRange'],
        'garmin_pace_range': value['garminPaceRange'],
        'garmin_power_target': value['garminPowerTarget'],
        'icu_garmin_last_upload': value['icuGarminLastUpload'] == null ? undefined : ((value['icuGarminLastUpload']).toISOString()),
        'icu_garmin_upload_filters': value['icuGarminUploadFilters'] == null ? undefined : ((value['icuGarminUploadFilters'] as Array<any>).map(ActivityFilterToJSON)),
        'icu_garmin_wellness_keys': value['icuGarminWellnessKeys'],
        'open_step_duration': value['openStepDuration'],
        'polar_scope': value['polarScope'],
        'polar_sync_activities': value['polarSyncActivities'],
        'polar_sync_activity_types': value['polarSyncActivityTypes'],
        'polar_download_wellness': value['polarDownloadWellness'],
        'polar_wellness_keys': value['polarWellnessKeys'],
        'suunto_scope': value['suuntoScope'],
        'suunto_user_id': value['suuntoUserId'],
        'suunto_sync_activities': value['suuntoSyncActivities'],
        'suunto_sync_activity_types': value['suuntoSyncActivityTypes'],
        'suunto_upload_workouts': value['suuntoUploadWorkouts'],
        'suunto_outdoor_power_range': value['suuntoOutdoorPowerRange'],
        'suunto_hr_range': value['suuntoHrRange'],
        'suunto_pace_range': value['suuntoPaceRange'],
        'suunto_last_upload': value['suuntoLastUpload'] == null ? undefined : ((value['suuntoLastUpload']).toISOString()),
        'suunto_upload_filters': value['suuntoUploadFilters'] == null ? undefined : ((value['suuntoUploadFilters'] as Array<any>).map(ActivityFilterToJSON)),
        'coros_user_id': value['corosUserId'],
        'coros_sync_activities': value['corosSyncActivities'],
        'coros_upload_workouts': value['corosUploadWorkouts'],
        'coros_download_wellness': value['corosDownloadWellness'],
        'coros_last_upload': value['corosLastUpload'] == null ? undefined : ((value['corosLastUpload']).toISOString()),
        'wahoo_user_id': value['wahooUserId'],
        'wahoo_sync_activities': value['wahooSyncActivities'],
        'wahoo_upload_workouts': value['wahooUploadWorkouts'],
        'dropbox_scope': value['dropboxScope'],
        'oura_scope': value['ouraScope'],
        'oura_wellness_keys': value['ouraWellnessKeys'],
        'whoop_scope': value['whoopScope'],
        'whoop_wellness_keys': value['whoopWellnessKeys'],
        'google_scope': value['googleScope'],
        'google_wellness_keys': value['googleWellnessKeys'],
        'icu_email_verified': value['icuEmailVerified'],
        'icu_email_disabled': value['icuEmailDisabled'],
        'icu_send_achievements': value['icuSendAchievements'],
        'icu_send_newsletter': value['icuSendNewsletter'],
        'icu_send_private_chat': value['icuSendPrivateChat'],
        'icu_send_private_msg': value['icuSendPrivateMsg'],
        'icu_send_follow_req': value['icuSendFollowReq'],
        'icu_send_group_chat': value['icuSendGroupChat'],
        'icu_send_group_msg': value['icuSendGroupMsg'],
        'icu_send_activity_chat': value['icuSendActivityChat'],
        'icu_send_followed_activity_chat': value['icuSendFollowedActivityChat'],
        'icu_send_coached_activity_chat': value['icuSendCoachedActivityChat'],
        'icu_send_activity_msg': value['icuSendActivityMsg'],
        'icu_send_coach_me_req': value['icuSendCoachMeReq'],
        'icu_send_gear_alerts': value['icuSendGearAlerts'],
        'icu_send_plan_for_week': value['icuSendPlanForWeek'],
        'include_descr_in_plan_for_week': value['includeDescrInPlanForWeek'],
        'icu_send_followed_new_activity': value['icuSendFollowedNewActivity'],
        'icu_send_coached_new_activity': value['icuSendCoachedNewActivity'],
        'icu_send_coach_tick': value['icuSendCoachTick'],
        'strava_allowed': value['stravaAllowed'],
        'strava_id': value['stravaId'],
        'scope': value['scope'],
        'strava_sync_activities': value['stravaSyncActivities'],
        'strava_sync_activity_types': value['stravaSyncActivityTypes'],
        'strava_sync_other_activities': value['stravaSyncOtherActivities'],
        'ignore_strava_gear': value['ignoreStravaGear'],
        'update_strava_name': value['updateStravaName'],
        'plan': value['plan'],
        'plan_expires': value['planExpires'] == null ? undefined : ((value['planExpires']).toISOString()),
        'trial_end_date': value['trialEndDate'] == null ? undefined : ((value['trialEndDate']).toISOString()),
        'has_password': value['hasPassword'],
        'beta_user': value['betaUser'],
        'currency': value['currency'],
        'training_plan_id': value['trainingPlanId'],
        'training_plan_start_date': value['trainingPlanStartDate'],
        'recalcHrZones': value['recalcHrZones'],
        'applyToAll': value['applyToAll'],
        'localDate': value['localDate'],
        'password': value['password'],
        'strava_authorized': value['stravaAuthorized'],
    };
}

