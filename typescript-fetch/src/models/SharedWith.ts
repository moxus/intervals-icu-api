/* tslint:disable */
/* eslint-disable */
/**
 * Intervals.icu API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SharedWith
 */
export interface SharedWith {
    /**
     * 
     * @type {string}
     * @memberof SharedWith
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof SharedWith
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof SharedWith
     */
    profileMedium?: string;
    /**
     * 
     * @type {string}
     * @memberof SharedWith
     */
    city?: string;
    /**
     * 
     * @type {string}
     * @memberof SharedWith
     */
    state?: string;
    /**
     * 
     * @type {string}
     * @memberof SharedWith
     */
    country?: string;
    /**
     * 
     * @type {string}
     * @memberof SharedWith
     */
    timezone?: string;
    /**
     * 
     * @type {string}
     * @memberof SharedWith
     */
    sex?: string;
    /**
     * 
     * @type {string}
     * @memberof SharedWith
     */
    bio?: string;
    /**
     * 
     * @type {string}
     * @memberof SharedWith
     */
    website?: string;
    /**
     * 
     * @type {string}
     * @memberof SharedWith
     */
    email?: string;
    /**
     * 
     * @type {boolean}
     * @memberof SharedWith
     */
    canEdit?: boolean;
}

/**
 * Check if a given object implements the SharedWith interface.
 */
export function instanceOfSharedWith(value: object): value is SharedWith {
    return true;
}

export function SharedWithFromJSON(json: any): SharedWith {
    return SharedWithFromJSONTyped(json, false);
}

export function SharedWithFromJSONTyped(json: any, ignoreDiscriminator: boolean): SharedWith {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'profileMedium': json['profile_medium'] == null ? undefined : json['profile_medium'],
        'city': json['city'] == null ? undefined : json['city'],
        'state': json['state'] == null ? undefined : json['state'],
        'country': json['country'] == null ? undefined : json['country'],
        'timezone': json['timezone'] == null ? undefined : json['timezone'],
        'sex': json['sex'] == null ? undefined : json['sex'],
        'bio': json['bio'] == null ? undefined : json['bio'],
        'website': json['website'] == null ? undefined : json['website'],
        'email': json['email'] == null ? undefined : json['email'],
        'canEdit': json['canEdit'] == null ? undefined : json['canEdit'],
    };
}

export function SharedWithToJSON(value?: SharedWith | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'profile_medium': value['profileMedium'],
        'city': value['city'],
        'state': value['state'],
        'country': value['country'],
        'timezone': value['timezone'],
        'sex': value['sex'],
        'bio': value['bio'],
        'website': value['website'],
        'email': value['email'],
        'canEdit': value['canEdit'],
    };
}

