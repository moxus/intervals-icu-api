/* tslint:disable */
/* eslint-disable */
/**
 * Intervals.icu API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SportInfo } from './SportInfo';
import {
    SportInfoFromJSON,
    SportInfoFromJSONTyped,
    SportInfoToJSON,
} from './SportInfo';

/**
 * 
 * @export
 * @interface Wellness
 */
export interface Wellness {
    /**
     * 
     * @type {string}
     * @memberof Wellness
     */
    id?: string;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    ctl?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    atl?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    rampRate?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    ctlLoad?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    atlLoad?: number;
    /**
     * 
     * @type {Array<SportInfo>}
     * @memberof Wellness
     */
    sportInfo?: Array<SportInfo>;
    /**
     * 
     * @type {Date}
     * @memberof Wellness
     */
    updated?: Date;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    weight?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    restingHR?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    hrv?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    hrvSDNN?: number;
    /**
     * 
     * @type {string}
     * @memberof Wellness
     */
    menstrualPhase?: WellnessMenstrualPhaseEnum;
    /**
     * 
     * @type {string}
     * @memberof Wellness
     */
    menstrualPhasePredicted?: WellnessMenstrualPhasePredictedEnum;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    kcalConsumed?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    sleepSecs?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    sleepScore?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    sleepQuality?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    avgSleepingHR?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    soreness?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    fatigue?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    stress?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    mood?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    motivation?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    injury?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    spO2?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    systolic?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    diastolic?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    hydration?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    hydrationVolume?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    readiness?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    baevskySI?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    bloodGlucose?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    lactate?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    bodyFat?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    abdomen?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    vo2max?: number;
    /**
     * 
     * @type {string}
     * @memberof Wellness
     */
    comments?: string;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    steps?: number;
    /**
     * 
     * @type {number}
     * @memberof Wellness
     */
    respiration?: number;
    /**
     * 
     * @type {boolean}
     * @memberof Wellness
     */
    locked?: boolean;
}


/**
 * @export
 */
export const WellnessMenstrualPhaseEnum = {
    Period: 'PERIOD',
    Follicular: 'FOLLICULAR',
    Ovulating: 'OVULATING',
    Luteal: 'LUTEAL',
    None: 'NONE'
} as const;
export type WellnessMenstrualPhaseEnum = typeof WellnessMenstrualPhaseEnum[keyof typeof WellnessMenstrualPhaseEnum];

/**
 * @export
 */
export const WellnessMenstrualPhasePredictedEnum = {
    Period: 'PERIOD',
    Follicular: 'FOLLICULAR',
    Ovulating: 'OVULATING',
    Luteal: 'LUTEAL',
    None: 'NONE'
} as const;
export type WellnessMenstrualPhasePredictedEnum = typeof WellnessMenstrualPhasePredictedEnum[keyof typeof WellnessMenstrualPhasePredictedEnum];


/**
 * Check if a given object implements the Wellness interface.
 */
export function instanceOfWellness(value: object): value is Wellness {
    return true;
}

export function WellnessFromJSON(json: any): Wellness {
    return WellnessFromJSONTyped(json, false);
}

export function WellnessFromJSONTyped(json: any, ignoreDiscriminator: boolean): Wellness {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'ctl': json['ctl'] == null ? undefined : json['ctl'],
        'atl': json['atl'] == null ? undefined : json['atl'],
        'rampRate': json['rampRate'] == null ? undefined : json['rampRate'],
        'ctlLoad': json['ctlLoad'] == null ? undefined : json['ctlLoad'],
        'atlLoad': json['atlLoad'] == null ? undefined : json['atlLoad'],
        'sportInfo': json['sportInfo'] == null ? undefined : ((json['sportInfo'] as Array<any>).map(SportInfoFromJSON)),
        'updated': json['updated'] == null ? undefined : (new Date(json['updated'])),
        'weight': json['weight'] == null ? undefined : json['weight'],
        'restingHR': json['restingHR'] == null ? undefined : json['restingHR'],
        'hrv': json['hrv'] == null ? undefined : json['hrv'],
        'hrvSDNN': json['hrvSDNN'] == null ? undefined : json['hrvSDNN'],
        'menstrualPhase': json['menstrualPhase'] == null ? undefined : json['menstrualPhase'],
        'menstrualPhasePredicted': json['menstrualPhasePredicted'] == null ? undefined : json['menstrualPhasePredicted'],
        'kcalConsumed': json['kcalConsumed'] == null ? undefined : json['kcalConsumed'],
        'sleepSecs': json['sleepSecs'] == null ? undefined : json['sleepSecs'],
        'sleepScore': json['sleepScore'] == null ? undefined : json['sleepScore'],
        'sleepQuality': json['sleepQuality'] == null ? undefined : json['sleepQuality'],
        'avgSleepingHR': json['avgSleepingHR'] == null ? undefined : json['avgSleepingHR'],
        'soreness': json['soreness'] == null ? undefined : json['soreness'],
        'fatigue': json['fatigue'] == null ? undefined : json['fatigue'],
        'stress': json['stress'] == null ? undefined : json['stress'],
        'mood': json['mood'] == null ? undefined : json['mood'],
        'motivation': json['motivation'] == null ? undefined : json['motivation'],
        'injury': json['injury'] == null ? undefined : json['injury'],
        'spO2': json['spO2'] == null ? undefined : json['spO2'],
        'systolic': json['systolic'] == null ? undefined : json['systolic'],
        'diastolic': json['diastolic'] == null ? undefined : json['diastolic'],
        'hydration': json['hydration'] == null ? undefined : json['hydration'],
        'hydrationVolume': json['hydrationVolume'] == null ? undefined : json['hydrationVolume'],
        'readiness': json['readiness'] == null ? undefined : json['readiness'],
        'baevskySI': json['baevskySI'] == null ? undefined : json['baevskySI'],
        'bloodGlucose': json['bloodGlucose'] == null ? undefined : json['bloodGlucose'],
        'lactate': json['lactate'] == null ? undefined : json['lactate'],
        'bodyFat': json['bodyFat'] == null ? undefined : json['bodyFat'],
        'abdomen': json['abdomen'] == null ? undefined : json['abdomen'],
        'vo2max': json['vo2max'] == null ? undefined : json['vo2max'],
        'comments': json['comments'] == null ? undefined : json['comments'],
        'steps': json['steps'] == null ? undefined : json['steps'],
        'respiration': json['respiration'] == null ? undefined : json['respiration'],
        'locked': json['locked'] == null ? undefined : json['locked'],
    };
}

export function WellnessToJSON(value?: Wellness | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'ctl': value['ctl'],
        'atl': value['atl'],
        'rampRate': value['rampRate'],
        'ctlLoad': value['ctlLoad'],
        'atlLoad': value['atlLoad'],
        'sportInfo': value['sportInfo'] == null ? undefined : ((value['sportInfo'] as Array<any>).map(SportInfoToJSON)),
        'updated': value['updated'] == null ? undefined : ((value['updated']).toISOString()),
        'weight': value['weight'],
        'restingHR': value['restingHR'],
        'hrv': value['hrv'],
        'hrvSDNN': value['hrvSDNN'],
        'menstrualPhase': value['menstrualPhase'],
        'menstrualPhasePredicted': value['menstrualPhasePredicted'],
        'kcalConsumed': value['kcalConsumed'],
        'sleepSecs': value['sleepSecs'],
        'sleepScore': value['sleepScore'],
        'sleepQuality': value['sleepQuality'],
        'avgSleepingHR': value['avgSleepingHR'],
        'soreness': value['soreness'],
        'fatigue': value['fatigue'],
        'stress': value['stress'],
        'mood': value['mood'],
        'motivation': value['motivation'],
        'injury': value['injury'],
        'spO2': value['spO2'],
        'systolic': value['systolic'],
        'diastolic': value['diastolic'],
        'hydration': value['hydration'],
        'hydrationVolume': value['hydrationVolume'],
        'readiness': value['readiness'],
        'baevskySI': value['baevskySI'],
        'bloodGlucose': value['bloodGlucose'],
        'lactate': value['lactate'],
        'bodyFat': value['bodyFat'],
        'abdomen': value['abdomen'],
        'vo2max': value['vo2max'],
        'comments': value['comments'],
        'steps': value['steps'],
        'respiration': value['respiration'],
        'locked': value['locked'],
    };
}

