/* tslint:disable */
/* eslint-disable */
/**
 * Intervals.icu API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CategorySummary
 */
export interface CategorySummary {
    /**
     * 
     * @type {number}
     * @memberof CategorySummary
     */
    count?: number;
    /**
     * 
     * @type {number}
     * @memberof CategorySummary
     */
    time?: number;
    /**
     * 
     * @type {number}
     * @memberof CategorySummary
     */
    movingTime?: number;
    /**
     * 
     * @type {number}
     * @memberof CategorySummary
     */
    elapsedTime?: number;
    /**
     * 
     * @type {number}
     * @memberof CategorySummary
     */
    calories?: number;
    /**
     * 
     * @type {number}
     * @memberof CategorySummary
     */
    totalElevationGain?: number;
    /**
     * 
     * @type {number}
     * @memberof CategorySummary
     */
    trainingLoad?: number;
    /**
     * 
     * @type {number}
     * @memberof CategorySummary
     */
    srpe?: number;
    /**
     * 
     * @type {number}
     * @memberof CategorySummary
     */
    distance?: number;
    /**
     * 
     * @type {string}
     * @memberof CategorySummary
     */
    category?: CategorySummaryCategoryEnum;
}


/**
 * @export
 */
export const CategorySummaryCategoryEnum = {
    Ride: 'Ride',
    Run: 'Run',
    Swim: 'Swim',
    WeightTraining: 'WeightTraining',
    Hike: 'Hike',
    Walk: 'Walk',
    AlpineSki: 'AlpineSki',
    BackcountrySki: 'BackcountrySki',
    Badminton: 'Badminton',
    Canoeing: 'Canoeing',
    Crossfit: 'Crossfit',
    EBikeRide: 'EBikeRide',
    EMountainBikeRide: 'EMountainBikeRide',
    Elliptical: 'Elliptical',
    Golf: 'Golf',
    GravelRide: 'GravelRide',
    Handcycle: 'Handcycle',
    HighIntensityIntervalTraining: 'HighIntensityIntervalTraining',
    Hockey: 'Hockey',
    IceSkate: 'IceSkate',
    InlineSkate: 'InlineSkate',
    Kayaking: 'Kayaking',
    Kitesurf: 'Kitesurf',
    MountainBikeRide: 'MountainBikeRide',
    NordicSki: 'NordicSki',
    OpenWaterSwim: 'OpenWaterSwim',
    Padel: 'Padel',
    Pilates: 'Pilates',
    Pickleball: 'Pickleball',
    Racquetball: 'Racquetball',
    Rugby: 'Rugby',
    RockClimbing: 'RockClimbing',
    RollerSki: 'RollerSki',
    Rowing: 'Rowing',
    Sail: 'Sail',
    Skateboard: 'Skateboard',
    Snowboard: 'Snowboard',
    Snowshoe: 'Snowshoe',
    Soccer: 'Soccer',
    Squash: 'Squash',
    StairStepper: 'StairStepper',
    StandUpPaddling: 'StandUpPaddling',
    Surfing: 'Surfing',
    TableTennis: 'TableTennis',
    Tennis: 'Tennis',
    TrailRun: 'TrailRun',
    Transition: 'Transition',
    Velomobile: 'Velomobile',
    VirtualRide: 'VirtualRide',
    VirtualRow: 'VirtualRow',
    VirtualRun: 'VirtualRun',
    WaterSport: 'WaterSport',
    Wheelchair: 'Wheelchair',
    Windsurf: 'Windsurf',
    Workout: 'Workout',
    Yoga: 'Yoga',
    Other: 'Other'
} as const;
export type CategorySummaryCategoryEnum = typeof CategorySummaryCategoryEnum[keyof typeof CategorySummaryCategoryEnum];


/**
 * Check if a given object implements the CategorySummary interface.
 */
export function instanceOfCategorySummary(value: object): value is CategorySummary {
    return true;
}

export function CategorySummaryFromJSON(json: any): CategorySummary {
    return CategorySummaryFromJSONTyped(json, false);
}

export function CategorySummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): CategorySummary {
    if (json == null) {
        return json;
    }
    return {
        
        'count': json['count'] == null ? undefined : json['count'],
        'time': json['time'] == null ? undefined : json['time'],
        'movingTime': json['moving_time'] == null ? undefined : json['moving_time'],
        'elapsedTime': json['elapsed_time'] == null ? undefined : json['elapsed_time'],
        'calories': json['calories'] == null ? undefined : json['calories'],
        'totalElevationGain': json['total_elevation_gain'] == null ? undefined : json['total_elevation_gain'],
        'trainingLoad': json['training_load'] == null ? undefined : json['training_load'],
        'srpe': json['srpe'] == null ? undefined : json['srpe'],
        'distance': json['distance'] == null ? undefined : json['distance'],
        'category': json['category'] == null ? undefined : json['category'],
    };
}

export function CategorySummaryToJSON(value?: CategorySummary | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'count': value['count'],
        'time': value['time'],
        'moving_time': value['movingTime'],
        'elapsed_time': value['elapsedTime'],
        'calories': value['calories'],
        'total_elevation_gain': value['totalElevationGain'],
        'training_load': value['trainingLoad'],
        'srpe': value['srpe'],
        'distance': value['distance'],
        'category': value['category'],
    };
}

