/* tslint:disable */
/* eslint-disable */
/**
 * Intervals.icu API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Attachment } from './Attachment';
import {
    AttachmentFromJSON,
    AttachmentFromJSONTyped,
    AttachmentToJSON,
} from './Attachment';

/**
 * 
 * @export
 * @interface Workout
 */
export interface Workout {
    /**
     * 
     * @type {string}
     * @memberof Workout
     */
    athleteId?: string;
    /**
     * 
     * @type {number}
     * @memberof Workout
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof Workout
     */
    icuTrainingLoad?: number;
    /**
     * 
     * @type {string}
     * @memberof Workout
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Workout
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof Workout
     */
    type?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Workout
     */
    indoor?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Workout
     */
    color?: string;
    /**
     * 
     * @type {number}
     * @memberof Workout
     */
    movingTime?: number;
    /**
     * 
     * @type {Date}
     * @memberof Workout
     */
    updated?: Date;
    /**
     * 
     * @type {number}
     * @memberof Workout
     */
    joules?: number;
    /**
     * 
     * @type {number}
     * @memberof Workout
     */
    joulesAboveFtp?: number;
    /**
     * 
     * @type {{ [key: string]: object; }}
     * @memberof Workout
     */
    workoutDoc?: { [key: string]: object; };
    /**
     * 
     * @type {number}
     * @memberof Workout
     */
    folderId?: number;
    /**
     * 
     * @type {number}
     * @memberof Workout
     */
    day?: number;
    /**
     * 
     * @type {number}
     * @memberof Workout
     */
    days?: number;
    /**
     * 
     * @type {Date}
     * @memberof Workout
     */
    planApplied?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof Workout
     */
    hideFromAthlete?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Workout
     */
    target?: WorkoutTargetEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof Workout
     */
    targets?: Array<WorkoutTargetsEnum>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Workout
     */
    tags?: Array<string>;
    /**
     * 
     * @type {Array<Attachment>}
     * @memberof Workout
     */
    attachments?: Array<Attachment>;
    /**
     * 
     * @type {string}
     * @memberof Workout
     */
    time?: string;
    /**
     * 
     * @type {number}
     * @memberof Workout
     */
    distance?: number;
    /**
     * 
     * @type {number}
     * @memberof Workout
     */
    icuIntensity?: number;
}


/**
 * @export
 */
export const WorkoutTargetEnum = {
    Auto: 'AUTO',
    Power: 'POWER',
    Hr: 'HR',
    Pace: 'PACE'
} as const;
export type WorkoutTargetEnum = typeof WorkoutTargetEnum[keyof typeof WorkoutTargetEnum];

/**
 * @export
 */
export const WorkoutTargetsEnum = {
    Auto: 'AUTO',
    Power: 'POWER',
    Hr: 'HR',
    Pace: 'PACE'
} as const;
export type WorkoutTargetsEnum = typeof WorkoutTargetsEnum[keyof typeof WorkoutTargetsEnum];


/**
 * Check if a given object implements the Workout interface.
 */
export function instanceOfWorkout(value: object): value is Workout {
    return true;
}

export function WorkoutFromJSON(json: any): Workout {
    return WorkoutFromJSONTyped(json, false);
}

export function WorkoutFromJSONTyped(json: any, ignoreDiscriminator: boolean): Workout {
    if (json == null) {
        return json;
    }
    return {
        
        'athleteId': json['athlete_id'] == null ? undefined : json['athlete_id'],
        'id': json['id'] == null ? undefined : json['id'],
        'icuTrainingLoad': json['icu_training_load'] == null ? undefined : json['icu_training_load'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'type': json['type'] == null ? undefined : json['type'],
        'indoor': json['indoor'] == null ? undefined : json['indoor'],
        'color': json['color'] == null ? undefined : json['color'],
        'movingTime': json['moving_time'] == null ? undefined : json['moving_time'],
        'updated': json['updated'] == null ? undefined : (new Date(json['updated'])),
        'joules': json['joules'] == null ? undefined : json['joules'],
        'joulesAboveFtp': json['joules_above_ftp'] == null ? undefined : json['joules_above_ftp'],
        'workoutDoc': json['workout_doc'] == null ? undefined : json['workout_doc'],
        'folderId': json['folder_id'] == null ? undefined : json['folder_id'],
        'day': json['day'] == null ? undefined : json['day'],
        'days': json['days'] == null ? undefined : json['days'],
        'planApplied': json['plan_applied'] == null ? undefined : (new Date(json['plan_applied'])),
        'hideFromAthlete': json['hide_from_athlete'] == null ? undefined : json['hide_from_athlete'],
        'target': json['target'] == null ? undefined : json['target'],
        'targets': json['targets'] == null ? undefined : json['targets'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'attachments': json['attachments'] == null ? undefined : ((json['attachments'] as Array<any>).map(AttachmentFromJSON)),
        'time': json['time'] == null ? undefined : json['time'],
        'distance': json['distance'] == null ? undefined : json['distance'],
        'icuIntensity': json['icu_intensity'] == null ? undefined : json['icu_intensity'],
    };
}

export function WorkoutToJSON(value?: Workout | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'athlete_id': value['athleteId'],
        'id': value['id'],
        'icu_training_load': value['icuTrainingLoad'],
        'name': value['name'],
        'description': value['description'],
        'type': value['type'],
        'indoor': value['indoor'],
        'color': value['color'],
        'moving_time': value['movingTime'],
        'updated': value['updated'] == null ? undefined : ((value['updated']).toISOString()),
        'joules': value['joules'],
        'joules_above_ftp': value['joulesAboveFtp'],
        'workout_doc': value['workoutDoc'],
        'folder_id': value['folderId'],
        'day': value['day'],
        'days': value['days'],
        'plan_applied': value['planApplied'] == null ? undefined : ((value['planApplied']).toISOString()),
        'hide_from_athlete': value['hideFromAthlete'],
        'target': value['target'],
        'targets': value['targets'],
        'tags': value['tags'],
        'attachments': value['attachments'] == null ? undefined : ((value['attachments'] as Array<any>).map(AttachmentToJSON)),
        'time': value['time'],
        'distance': value['distance'],
        'icu_intensity': value['icuIntensity'],
    };
}

